Compiled from "FacebookBase.java"
public abstract class com.facebook.fb303.FacebookBase implements com.facebook.fb303.FacebookService$Iface {
  protected com.facebook.fb303.FacebookBase(java.lang.String);
  public java.lang.String getName();
  public abstract com.facebook.fb303.fb_status getStatus();
  public java.lang.String getStatusDetails();
  public void deleteCounter(java.lang.String);
  public void resetCounter(java.lang.String);
  public long incrementCounter(java.lang.String);
  public java.util.AbstractMap<java.lang.String, java.lang.Long> getCounters();
  public long getCounter(java.lang.String);
  public void setOption(java.lang.String, java.lang.String);
  public java.lang.String getOption(java.lang.String);
  public java.util.AbstractMap<java.lang.String, java.lang.String> getOptions();
  public long aliveSince();
  public java.lang.String getCpuProfile();
  public void reinitialize();
  public void shutdown();
  public java.util.Map getOptions() throws org.apache.thrift.TException;
  public java.util.Map getCounters() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService {
  public com.facebook.fb303.FacebookService();
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$1 {
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getName_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getName_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getVersion_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getVersion_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getStatus_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getStatus_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getStatusDetails_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getStatusDetails_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getCounters_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getCounters_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getCounter_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getCounter_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$setOption_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$setOption_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getOption_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getOption_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getOptions_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getOptions_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getCpuProfile_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$getCpuProfile_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$aliveSince_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$aliveSince_result$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$reinitialize_args$_Fields;
  static final int[] $SwitchMap$com$facebook$fb303$FacebookService$shutdown_args$_Fields;
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient extends org.apache.thrift.async.TAsyncClient implements com.facebook.fb303.FacebookService$AsyncIface {
  public com.facebook.fb303.FacebookService$AsyncClient(org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.async.TAsyncClientManager, org.apache.thrift.transport.TNonblockingTransport);
  public void getName(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getName_call>) throws org.apache.thrift.TException;
  public void getVersion(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getVersion_call>) throws org.apache.thrift.TException;
  public void getStatus(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getStatus_call>) throws org.apache.thrift.TException;
  public void getStatusDetails(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getStatusDetails_call>) throws org.apache.thrift.TException;
  public void getCounters(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCounters_call>) throws org.apache.thrift.TException;
  public void getCounter(java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCounter_call>) throws org.apache.thrift.TException;
  public void setOption(java.lang.String, java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$setOption_call>) throws org.apache.thrift.TException;
  public void getOption(java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getOption_call>) throws org.apache.thrift.TException;
  public void getOptions(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getOptions_call>) throws org.apache.thrift.TException;
  public void getCpuProfile(int, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCpuProfile_call>) throws org.apache.thrift.TException;
  public void aliveSince(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$aliveSince_call>) throws org.apache.thrift.TException;
  public void reinitialize(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$reinitialize_call>) throws org.apache.thrift.TException;
  public void shutdown(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$shutdown_call>) throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$Factory implements org.apache.thrift.async.TAsyncClientFactory<com.facebook.fb303.FacebookService$AsyncClient> {
  public com.facebook.fb303.FacebookService$AsyncClient$Factory(org.apache.thrift.async.TAsyncClientManager, org.apache.thrift.protocol.TProtocolFactory);
  public com.facebook.fb303.FacebookService$AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport);
  public org.apache.thrift.async.TAsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport);
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$aliveSince_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$aliveSince_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$aliveSince_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public long getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getCounter_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getCounter_call(java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCounter_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public long getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getCounters_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getCounters_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCounters_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.util.Map<java.lang.String, java.lang.Long> getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getCpuProfile_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getCpuProfile_call(int, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCpuProfile_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getName_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getName_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getName_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getOption_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getOption_call(java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getOption_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getOptions_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getOptions_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getOptions_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.util.Map<java.lang.String, java.lang.String> getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getStatusDetails_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getStatusDetails_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getStatusDetails_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getStatus_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getStatus_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getStatus_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public com.facebook.fb303.fb_status getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$getVersion_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$getVersion_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getVersion_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$reinitialize_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$reinitialize_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$reinitialize_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$setOption_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$setOption_call(java.lang.String, java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$setOption_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$AsyncClient$shutdown_call extends org.apache.thrift.async.TAsyncMethodCall {
  public com.facebook.fb303.FacebookService$AsyncClient$shutdown_call(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$shutdown_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void getResult() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public interface com.facebook.fb303.FacebookService$AsyncIface {
  public abstract void getName(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getName_call>) throws org.apache.thrift.TException;
  public abstract void getVersion(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getVersion_call>) throws org.apache.thrift.TException;
  public abstract void getStatus(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getStatus_call>) throws org.apache.thrift.TException;
  public abstract void getStatusDetails(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getStatusDetails_call>) throws org.apache.thrift.TException;
  public abstract void getCounters(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCounters_call>) throws org.apache.thrift.TException;
  public abstract void getCounter(java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCounter_call>) throws org.apache.thrift.TException;
  public abstract void setOption(java.lang.String, java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$setOption_call>) throws org.apache.thrift.TException;
  public abstract void getOption(java.lang.String, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getOption_call>) throws org.apache.thrift.TException;
  public abstract void getOptions(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getOptions_call>) throws org.apache.thrift.TException;
  public abstract void getCpuProfile(int, org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$getCpuProfile_call>) throws org.apache.thrift.TException;
  public abstract void aliveSince(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$aliveSince_call>) throws org.apache.thrift.TException;
  public abstract void reinitialize(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$reinitialize_call>) throws org.apache.thrift.TException;
  public abstract void shutdown(org.apache.thrift.async.AsyncMethodCallback<com.facebook.fb303.FacebookService$AsyncClient$shutdown_call>) throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$Client implements org.apache.thrift.TServiceClient,com.facebook.fb303.FacebookService$Iface {
  protected org.apache.thrift.protocol.TProtocol iprot_;
  protected org.apache.thrift.protocol.TProtocol oprot_;
  protected int seqid_;
  public com.facebook.fb303.FacebookService$Client(org.apache.thrift.protocol.TProtocol);
  public com.facebook.fb303.FacebookService$Client(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol);
  public org.apache.thrift.protocol.TProtocol getInputProtocol();
  public org.apache.thrift.protocol.TProtocol getOutputProtocol();
  public java.lang.String getName() throws org.apache.thrift.TException;
  public void send_getName() throws org.apache.thrift.TException;
  public java.lang.String recv_getName() throws org.apache.thrift.TException;
  public java.lang.String getVersion() throws org.apache.thrift.TException;
  public void send_getVersion() throws org.apache.thrift.TException;
  public java.lang.String recv_getVersion() throws org.apache.thrift.TException;
  public com.facebook.fb303.fb_status getStatus() throws org.apache.thrift.TException;
  public void send_getStatus() throws org.apache.thrift.TException;
  public com.facebook.fb303.fb_status recv_getStatus() throws org.apache.thrift.TException;
  public java.lang.String getStatusDetails() throws org.apache.thrift.TException;
  public void send_getStatusDetails() throws org.apache.thrift.TException;
  public java.lang.String recv_getStatusDetails() throws org.apache.thrift.TException;
  public java.util.Map<java.lang.String, java.lang.Long> getCounters() throws org.apache.thrift.TException;
  public void send_getCounters() throws org.apache.thrift.TException;
  public java.util.Map<java.lang.String, java.lang.Long> recv_getCounters() throws org.apache.thrift.TException;
  public long getCounter(java.lang.String) throws org.apache.thrift.TException;
  public void send_getCounter(java.lang.String) throws org.apache.thrift.TException;
  public long recv_getCounter() throws org.apache.thrift.TException;
  public void setOption(java.lang.String, java.lang.String) throws org.apache.thrift.TException;
  public void send_setOption(java.lang.String, java.lang.String) throws org.apache.thrift.TException;
  public void recv_setOption() throws org.apache.thrift.TException;
  public java.lang.String getOption(java.lang.String) throws org.apache.thrift.TException;
  public void send_getOption(java.lang.String) throws org.apache.thrift.TException;
  public java.lang.String recv_getOption() throws org.apache.thrift.TException;
  public java.util.Map<java.lang.String, java.lang.String> getOptions() throws org.apache.thrift.TException;
  public void send_getOptions() throws org.apache.thrift.TException;
  public java.util.Map<java.lang.String, java.lang.String> recv_getOptions() throws org.apache.thrift.TException;
  public java.lang.String getCpuProfile(int) throws org.apache.thrift.TException;
  public void send_getCpuProfile(int) throws org.apache.thrift.TException;
  public java.lang.String recv_getCpuProfile() throws org.apache.thrift.TException;
  public long aliveSince() throws org.apache.thrift.TException;
  public void send_aliveSince() throws org.apache.thrift.TException;
  public long recv_aliveSince() throws org.apache.thrift.TException;
  public void reinitialize() throws org.apache.thrift.TException;
  public void send_reinitialize() throws org.apache.thrift.TException;
  public void shutdown() throws org.apache.thrift.TException;
  public void send_shutdown() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$Client$Factory implements org.apache.thrift.TServiceClientFactory<com.facebook.fb303.FacebookService$Client> {
  public com.facebook.fb303.FacebookService$Client$Factory();
  public com.facebook.fb303.FacebookService$Client getClient(org.apache.thrift.protocol.TProtocol);
  public com.facebook.fb303.FacebookService$Client getClient(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol);
  public org.apache.thrift.TServiceClient getClient(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol);
  public org.apache.thrift.TServiceClient getClient(org.apache.thrift.protocol.TProtocol);
}
Compiled from "FacebookService.java"
public interface com.facebook.fb303.FacebookService$Iface {
  public abstract java.lang.String getName() throws org.apache.thrift.TException;
  public abstract java.lang.String getVersion() throws org.apache.thrift.TException;
  public abstract com.facebook.fb303.fb_status getStatus() throws org.apache.thrift.TException;
  public abstract java.lang.String getStatusDetails() throws org.apache.thrift.TException;
  public abstract java.util.Map<java.lang.String, java.lang.Long> getCounters() throws org.apache.thrift.TException;
  public abstract long getCounter(java.lang.String) throws org.apache.thrift.TException;
  public abstract void setOption(java.lang.String, java.lang.String) throws org.apache.thrift.TException;
  public abstract java.lang.String getOption(java.lang.String) throws org.apache.thrift.TException;
  public abstract java.util.Map<java.lang.String, java.lang.String> getOptions() throws org.apache.thrift.TException;
  public abstract java.lang.String getCpuProfile(int) throws org.apache.thrift.TException;
  public abstract long aliveSince() throws org.apache.thrift.TException;
  public abstract void reinitialize() throws org.apache.thrift.TException;
  public abstract void shutdown() throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$Processor implements org.apache.thrift.TProcessor {
  protected final java.util.HashMap<java.lang.String, com.facebook.fb303.FacebookService$Processor$ProcessFunction> processMap_;
  public com.facebook.fb303.FacebookService$Processor(com.facebook.fb303.FacebookService$Iface);
  public boolean process(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  static com.facebook.fb303.FacebookService$Iface access$1300(com.facebook.fb303.FacebookService$Processor);
  static {};
}
Compiled from "FacebookService.java"
public interface com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  public abstract void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$aliveSince implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$aliveSince(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getCounter implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getCounter(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getCounters implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getCounters(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getCpuProfile implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getCpuProfile(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getName implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getName(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getOption implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getOption(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getOptions implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getOptions(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getStatus implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getStatus(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getStatusDetails implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getStatusDetails(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$getVersion implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$getVersion(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$reinitialize implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$reinitialize(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$setOption implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$setOption(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
class com.facebook.fb303.FacebookService$Processor$shutdown implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final com.facebook.fb303.FacebookService$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  com.facebook.fb303.FacebookService$Processor$shutdown(com.facebook.fb303.FacebookService$Processor, com.facebook.fb303.FacebookService$1);
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$aliveSince_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$aliveSince_args, com.facebook.fb303.FacebookService$aliveSince_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$aliveSince_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$aliveSince_args();
  public com.facebook.fb303.FacebookService$aliveSince_args(com.facebook.fb303.FacebookService$aliveSince_args);
  public com.facebook.fb303.FacebookService$aliveSince_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$aliveSince_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$aliveSince_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$aliveSince_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$aliveSince_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$aliveSince_args);
  public com.facebook.fb303.FacebookService$aliveSince_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$aliveSince_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$aliveSince_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$aliveSince_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$aliveSince_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$aliveSince_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$aliveSince_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$aliveSince_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$aliveSince_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$aliveSince_result, com.facebook.fb303.FacebookService$aliveSince_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public long success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$aliveSince_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$aliveSince_result();
  public com.facebook.fb303.FacebookService$aliveSince_result(long);
  public com.facebook.fb303.FacebookService$aliveSince_result(com.facebook.fb303.FacebookService$aliveSince_result);
  public com.facebook.fb303.FacebookService$aliveSince_result deepCopy();
  public void clear();
  public long getSuccess();
  public com.facebook.fb303.FacebookService$aliveSince_result setSuccess(long);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$aliveSince_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$aliveSince_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$aliveSince_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$aliveSince_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$aliveSince_result);
  public com.facebook.fb303.FacebookService$aliveSince_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$aliveSince_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$aliveSince_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$aliveSince_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$aliveSince_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$aliveSince_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$aliveSince_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$aliveSince_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$aliveSince_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getCounter_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getCounter_args, com.facebook.fb303.FacebookService$getCounter_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String key;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getCounter_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getCounter_args();
  public com.facebook.fb303.FacebookService$getCounter_args(java.lang.String);
  public com.facebook.fb303.FacebookService$getCounter_args(com.facebook.fb303.FacebookService$getCounter_args);
  public com.facebook.fb303.FacebookService$getCounter_args deepCopy();
  public void clear();
  public java.lang.String getKey();
  public com.facebook.fb303.FacebookService$getCounter_args setKey(java.lang.String);
  public void unsetKey();
  public boolean isSetKey();
  public void setKeyIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getCounter_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getCounter_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getCounter_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getCounter_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getCounter_args);
  public com.facebook.fb303.FacebookService$getCounter_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getCounter_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getCounter_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getCounter_args$_Fields KEY;
  public static com.facebook.fb303.FacebookService$getCounter_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getCounter_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getCounter_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getCounter_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getCounter_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getCounter_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getCounter_result, com.facebook.fb303.FacebookService$getCounter_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public long success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getCounter_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getCounter_result();
  public com.facebook.fb303.FacebookService$getCounter_result(long);
  public com.facebook.fb303.FacebookService$getCounter_result(com.facebook.fb303.FacebookService$getCounter_result);
  public com.facebook.fb303.FacebookService$getCounter_result deepCopy();
  public void clear();
  public long getSuccess();
  public com.facebook.fb303.FacebookService$getCounter_result setSuccess(long);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getCounter_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getCounter_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getCounter_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getCounter_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getCounter_result);
  public com.facebook.fb303.FacebookService$getCounter_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getCounter_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getCounter_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getCounter_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getCounter_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getCounter_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getCounter_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getCounter_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getCounter_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getCounters_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getCounters_args, com.facebook.fb303.FacebookService$getCounters_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$getCounters_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getCounters_args();
  public com.facebook.fb303.FacebookService$getCounters_args(com.facebook.fb303.FacebookService$getCounters_args);
  public com.facebook.fb303.FacebookService$getCounters_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$getCounters_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getCounters_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getCounters_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getCounters_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getCounters_args);
  public com.facebook.fb303.FacebookService$getCounters_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getCounters_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getCounters_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$getCounters_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getCounters_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getCounters_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getCounters_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getCounters_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getCounters_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getCounters_result, com.facebook.fb303.FacebookService$getCounters_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.util.Map<java.lang.String, java.lang.Long> success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getCounters_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getCounters_result();
  public com.facebook.fb303.FacebookService$getCounters_result(java.util.Map<java.lang.String, java.lang.Long>);
  public com.facebook.fb303.FacebookService$getCounters_result(com.facebook.fb303.FacebookService$getCounters_result);
  public com.facebook.fb303.FacebookService$getCounters_result deepCopy();
  public void clear();
  public int getSuccessSize();
  public void putToSuccess(java.lang.String, long);
  public java.util.Map<java.lang.String, java.lang.Long> getSuccess();
  public com.facebook.fb303.FacebookService$getCounters_result setSuccess(java.util.Map<java.lang.String, java.lang.Long>);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getCounters_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getCounters_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getCounters_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getCounters_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getCounters_result);
  public com.facebook.fb303.FacebookService$getCounters_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getCounters_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getCounters_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getCounters_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getCounters_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getCounters_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getCounters_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getCounters_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getCounters_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getCpuProfile_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getCpuProfile_args, com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public int profileDurationInSec;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getCpuProfile_args();
  public com.facebook.fb303.FacebookService$getCpuProfile_args(int);
  public com.facebook.fb303.FacebookService$getCpuProfile_args(com.facebook.fb303.FacebookService$getCpuProfile_args);
  public com.facebook.fb303.FacebookService$getCpuProfile_args deepCopy();
  public void clear();
  public int getProfileDurationInSec();
  public com.facebook.fb303.FacebookService$getCpuProfile_args setProfileDurationInSec(int);
  public void unsetProfileDurationInSec();
  public boolean isSetProfileDurationInSec();
  public void setProfileDurationInSecIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getCpuProfile_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getCpuProfile_args);
  public com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields PROFILE_DURATION_IN_SEC;
  public static com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getCpuProfile_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getCpuProfile_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getCpuProfile_result, com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getCpuProfile_result();
  public com.facebook.fb303.FacebookService$getCpuProfile_result(java.lang.String);
  public com.facebook.fb303.FacebookService$getCpuProfile_result(com.facebook.fb303.FacebookService$getCpuProfile_result);
  public com.facebook.fb303.FacebookService$getCpuProfile_result deepCopy();
  public void clear();
  public java.lang.String getSuccess();
  public com.facebook.fb303.FacebookService$getCpuProfile_result setSuccess(java.lang.String);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getCpuProfile_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getCpuProfile_result);
  public com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getCpuProfile_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getName_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getName_args, com.facebook.fb303.FacebookService$getName_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$getName_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getName_args();
  public com.facebook.fb303.FacebookService$getName_args(com.facebook.fb303.FacebookService$getName_args);
  public com.facebook.fb303.FacebookService$getName_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$getName_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getName_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getName_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getName_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getName_args);
  public com.facebook.fb303.FacebookService$getName_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getName_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getName_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$getName_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getName_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getName_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getName_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getName_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getName_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getName_result, com.facebook.fb303.FacebookService$getName_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getName_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getName_result();
  public com.facebook.fb303.FacebookService$getName_result(java.lang.String);
  public com.facebook.fb303.FacebookService$getName_result(com.facebook.fb303.FacebookService$getName_result);
  public com.facebook.fb303.FacebookService$getName_result deepCopy();
  public void clear();
  public java.lang.String getSuccess();
  public com.facebook.fb303.FacebookService$getName_result setSuccess(java.lang.String);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getName_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getName_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getName_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getName_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getName_result);
  public com.facebook.fb303.FacebookService$getName_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getName_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getName_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getName_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getName_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getName_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getName_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getName_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getName_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getOption_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getOption_args, com.facebook.fb303.FacebookService$getOption_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String key;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getOption_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getOption_args();
  public com.facebook.fb303.FacebookService$getOption_args(java.lang.String);
  public com.facebook.fb303.FacebookService$getOption_args(com.facebook.fb303.FacebookService$getOption_args);
  public com.facebook.fb303.FacebookService$getOption_args deepCopy();
  public void clear();
  public java.lang.String getKey();
  public com.facebook.fb303.FacebookService$getOption_args setKey(java.lang.String);
  public void unsetKey();
  public boolean isSetKey();
  public void setKeyIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getOption_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getOption_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getOption_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getOption_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getOption_args);
  public com.facebook.fb303.FacebookService$getOption_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getOption_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getOption_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getOption_args$_Fields KEY;
  public static com.facebook.fb303.FacebookService$getOption_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getOption_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getOption_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getOption_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getOption_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getOption_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getOption_result, com.facebook.fb303.FacebookService$getOption_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getOption_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getOption_result();
  public com.facebook.fb303.FacebookService$getOption_result(java.lang.String);
  public com.facebook.fb303.FacebookService$getOption_result(com.facebook.fb303.FacebookService$getOption_result);
  public com.facebook.fb303.FacebookService$getOption_result deepCopy();
  public void clear();
  public java.lang.String getSuccess();
  public com.facebook.fb303.FacebookService$getOption_result setSuccess(java.lang.String);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getOption_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getOption_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getOption_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getOption_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getOption_result);
  public com.facebook.fb303.FacebookService$getOption_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getOption_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getOption_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getOption_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getOption_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getOption_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getOption_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getOption_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getOption_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getOptions_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getOptions_args, com.facebook.fb303.FacebookService$getOptions_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$getOptions_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getOptions_args();
  public com.facebook.fb303.FacebookService$getOptions_args(com.facebook.fb303.FacebookService$getOptions_args);
  public com.facebook.fb303.FacebookService$getOptions_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$getOptions_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getOptions_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getOptions_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getOptions_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getOptions_args);
  public com.facebook.fb303.FacebookService$getOptions_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getOptions_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getOptions_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$getOptions_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getOptions_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getOptions_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getOptions_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getOptions_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getOptions_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getOptions_result, com.facebook.fb303.FacebookService$getOptions_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.util.Map<java.lang.String, java.lang.String> success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getOptions_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getOptions_result();
  public com.facebook.fb303.FacebookService$getOptions_result(java.util.Map<java.lang.String, java.lang.String>);
  public com.facebook.fb303.FacebookService$getOptions_result(com.facebook.fb303.FacebookService$getOptions_result);
  public com.facebook.fb303.FacebookService$getOptions_result deepCopy();
  public void clear();
  public int getSuccessSize();
  public void putToSuccess(java.lang.String, java.lang.String);
  public java.util.Map<java.lang.String, java.lang.String> getSuccess();
  public com.facebook.fb303.FacebookService$getOptions_result setSuccess(java.util.Map<java.lang.String, java.lang.String>);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getOptions_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getOptions_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getOptions_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getOptions_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getOptions_result);
  public com.facebook.fb303.FacebookService$getOptions_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getOptions_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getOptions_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getOptions_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getOptions_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getOptions_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getOptions_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getOptions_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getOptions_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getStatusDetails_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getStatusDetails_args, com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getStatusDetails_args();
  public com.facebook.fb303.FacebookService$getStatusDetails_args(com.facebook.fb303.FacebookService$getStatusDetails_args);
  public com.facebook.fb303.FacebookService$getStatusDetails_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getStatusDetails_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getStatusDetails_args);
  public com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getStatusDetails_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getStatusDetails_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getStatusDetails_result, com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getStatusDetails_result();
  public com.facebook.fb303.FacebookService$getStatusDetails_result(java.lang.String);
  public com.facebook.fb303.FacebookService$getStatusDetails_result(com.facebook.fb303.FacebookService$getStatusDetails_result);
  public com.facebook.fb303.FacebookService$getStatusDetails_result deepCopy();
  public void clear();
  public java.lang.String getSuccess();
  public com.facebook.fb303.FacebookService$getStatusDetails_result setSuccess(java.lang.String);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getStatusDetails_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getStatusDetails_result);
  public com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getStatusDetails_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getStatus_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getStatus_args, com.facebook.fb303.FacebookService$getStatus_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$getStatus_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getStatus_args();
  public com.facebook.fb303.FacebookService$getStatus_args(com.facebook.fb303.FacebookService$getStatus_args);
  public com.facebook.fb303.FacebookService$getStatus_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$getStatus_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getStatus_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getStatus_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getStatus_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getStatus_args);
  public com.facebook.fb303.FacebookService$getStatus_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getStatus_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getStatus_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$getStatus_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getStatus_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getStatus_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getStatus_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getStatus_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getStatus_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getStatus_result, com.facebook.fb303.FacebookService$getStatus_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public com.facebook.fb303.fb_status success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getStatus_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getStatus_result();
  public com.facebook.fb303.FacebookService$getStatus_result(com.facebook.fb303.fb_status);
  public com.facebook.fb303.FacebookService$getStatus_result(com.facebook.fb303.FacebookService$getStatus_result);
  public com.facebook.fb303.FacebookService$getStatus_result deepCopy();
  public void clear();
  public com.facebook.fb303.fb_status getSuccess();
  public com.facebook.fb303.FacebookService$getStatus_result setSuccess(com.facebook.fb303.fb_status);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getStatus_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getStatus_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getStatus_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getStatus_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getStatus_result);
  public com.facebook.fb303.FacebookService$getStatus_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getStatus_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getStatus_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getStatus_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getStatus_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getStatus_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getStatus_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getStatus_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getStatus_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getVersion_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getVersion_args, com.facebook.fb303.FacebookService$getVersion_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$getVersion_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getVersion_args();
  public com.facebook.fb303.FacebookService$getVersion_args(com.facebook.fb303.FacebookService$getVersion_args);
  public com.facebook.fb303.FacebookService$getVersion_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$getVersion_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getVersion_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getVersion_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getVersion_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getVersion_args);
  public com.facebook.fb303.FacebookService$getVersion_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getVersion_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getVersion_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$getVersion_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getVersion_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getVersion_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getVersion_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getVersion_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$getVersion_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$getVersion_result, com.facebook.fb303.FacebookService$getVersion_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String success;
  public static final java.util.Map<com.facebook.fb303.FacebookService$getVersion_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$getVersion_result();
  public com.facebook.fb303.FacebookService$getVersion_result(java.lang.String);
  public com.facebook.fb303.FacebookService$getVersion_result(com.facebook.fb303.FacebookService$getVersion_result);
  public com.facebook.fb303.FacebookService$getVersion_result deepCopy();
  public void clear();
  public java.lang.String getSuccess();
  public com.facebook.fb303.FacebookService$getVersion_result setSuccess(java.lang.String);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$getVersion_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$getVersion_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$getVersion_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$getVersion_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$getVersion_result);
  public com.facebook.fb303.FacebookService$getVersion_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$getVersion_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$getVersion_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$getVersion_result$_Fields SUCCESS;
  public static com.facebook.fb303.FacebookService$getVersion_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$getVersion_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$getVersion_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$getVersion_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$getVersion_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$reinitialize_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$reinitialize_args, com.facebook.fb303.FacebookService$reinitialize_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$reinitialize_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$reinitialize_args();
  public com.facebook.fb303.FacebookService$reinitialize_args(com.facebook.fb303.FacebookService$reinitialize_args);
  public com.facebook.fb303.FacebookService$reinitialize_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$reinitialize_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$reinitialize_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$reinitialize_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$reinitialize_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$reinitialize_args);
  public com.facebook.fb303.FacebookService$reinitialize_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$reinitialize_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$reinitialize_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$reinitialize_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$reinitialize_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$reinitialize_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$reinitialize_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$reinitialize_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$setOption_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$setOption_args, com.facebook.fb303.FacebookService$setOption_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String key;
  public java.lang.String value;
  public static final java.util.Map<com.facebook.fb303.FacebookService$setOption_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$setOption_args();
  public com.facebook.fb303.FacebookService$setOption_args(java.lang.String, java.lang.String);
  public com.facebook.fb303.FacebookService$setOption_args(com.facebook.fb303.FacebookService$setOption_args);
  public com.facebook.fb303.FacebookService$setOption_args deepCopy();
  public void clear();
  public java.lang.String getKey();
  public com.facebook.fb303.FacebookService$setOption_args setKey(java.lang.String);
  public void unsetKey();
  public boolean isSetKey();
  public void setKeyIsSet(boolean);
  public java.lang.String getValue();
  public com.facebook.fb303.FacebookService$setOption_args setValue(java.lang.String);
  public void unsetValue();
  public boolean isSetValue();
  public void setValueIsSet(boolean);
  public void setFieldValue(com.facebook.fb303.FacebookService$setOption_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$setOption_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$setOption_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$setOption_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$setOption_args);
  public com.facebook.fb303.FacebookService$setOption_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$setOption_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$setOption_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final com.facebook.fb303.FacebookService$setOption_args$_Fields KEY;
  public static final com.facebook.fb303.FacebookService$setOption_args$_Fields VALUE;
  public static com.facebook.fb303.FacebookService$setOption_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$setOption_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$setOption_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$setOption_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$setOption_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$setOption_result implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$setOption_result, com.facebook.fb303.FacebookService$setOption_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$setOption_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$setOption_result();
  public com.facebook.fb303.FacebookService$setOption_result(com.facebook.fb303.FacebookService$setOption_result);
  public com.facebook.fb303.FacebookService$setOption_result deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$setOption_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$setOption_result$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$setOption_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$setOption_result);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$setOption_result);
  public com.facebook.fb303.FacebookService$setOption_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$setOption_result$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$setOption_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$setOption_result$_Fields[] values();
  public static com.facebook.fb303.FacebookService$setOption_result$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$setOption_result$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$setOption_result$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$setOption_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "FacebookService.java"
public class com.facebook.fb303.FacebookService$shutdown_args implements org.apache.thrift.TBase<com.facebook.fb303.FacebookService$shutdown_args, com.facebook.fb303.FacebookService$shutdown_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public static final java.util.Map<com.facebook.fb303.FacebookService$shutdown_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public com.facebook.fb303.FacebookService$shutdown_args();
  public com.facebook.fb303.FacebookService$shutdown_args(com.facebook.fb303.FacebookService$shutdown_args);
  public com.facebook.fb303.FacebookService$shutdown_args deepCopy();
  public void clear();
  public void setFieldValue(com.facebook.fb303.FacebookService$shutdown_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(com.facebook.fb303.FacebookService$shutdown_args$_Fields);
  public boolean isSet(com.facebook.fb303.FacebookService$shutdown_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(com.facebook.fb303.FacebookService$shutdown_args);
  public int hashCode();
  public int compareTo(com.facebook.fb303.FacebookService$shutdown_args);
  public com.facebook.fb303.FacebookService$shutdown_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "FacebookService.java"
public final class com.facebook.fb303.FacebookService$shutdown_args$_Fields extends java.lang.Enum<com.facebook.fb303.FacebookService$shutdown_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static com.facebook.fb303.FacebookService$shutdown_args$_Fields[] values();
  public static com.facebook.fb303.FacebookService$shutdown_args$_Fields valueOf(java.lang.String);
  public static com.facebook.fb303.FacebookService$shutdown_args$_Fields findByThriftId(int);
  public static com.facebook.fb303.FacebookService$shutdown_args$_Fields findByThriftIdOrThrow(int);
  public static com.facebook.fb303.FacebookService$shutdown_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "fb_status.java"
public final class com.facebook.fb303.fb_status extends java.lang.Enum<com.facebook.fb303.fb_status> implements org.apache.thrift.TEnum {
  public static final com.facebook.fb303.fb_status DEAD;
  public static final com.facebook.fb303.fb_status STARTING;
  public static final com.facebook.fb303.fb_status ALIVE;
  public static final com.facebook.fb303.fb_status STOPPING;
  public static final com.facebook.fb303.fb_status STOPPED;
  public static final com.facebook.fb303.fb_status WARNING;
  public static com.facebook.fb303.fb_status[] values();
  public static com.facebook.fb303.fb_status valueOf(java.lang.String);
  public int getValue();
  public static com.facebook.fb303.fb_status findByValue(int);
  static {};
}
Compiled from "ScribeClientQuickStartMainClass.java"
public class com.realtimecep.scribe.ScribeClientQuickStartMainClass {
  public com.realtimecep.scribe.ScribeClientQuickStartMainClass();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  static {};
}
Compiled from "ScribeJavaClient.java"
public class com.realtimecep.scribe.ScribeJavaClient {
  public com.realtimecep.scribe.ScribeJavaClient();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "ScribeJavaServer.java"
public class com.realtimecep.scribe.ScribeJavaServer {
  public static com.realtimecep.scribe.ScribeLogImpl handler;
  public static scribe.thrift.scribe$Processor processor;
  public static int PORT;
  public com.realtimecep.scribe.ScribeJavaServer();
  public void runServer();
  public static void main(java.lang.String[]);
  static {};
}
Compiled from "ScribeJavaServerTest.java"
public class com.realtimecep.scribe.ScribeJavaServerTest {
  public com.realtimecep.scribe.ScribeJavaServerTest();
  public void runServer();
}
Compiled from "ScribeLogImpl.java"
public class com.realtimecep.scribe.ScribeLogImpl implements scribe.thrift.scribe$Iface {
  public com.realtimecep.scribe.ScribeLogImpl();
  public scribe.thrift.ResultCode Log(java.util.List<scribe.thrift.LogEntry>) throws org.apache.thrift.TException;
  public java.lang.String getName() throws org.apache.thrift.TException;
  public java.lang.String getVersion() throws org.apache.thrift.TException;
  public com.facebook.fb303.fb_status getStatus() throws org.apache.thrift.TException;
  public java.lang.String getStatusDetails() throws org.apache.thrift.TException;
  public java.util.Map<java.lang.String, java.lang.Long> getCounters() throws org.apache.thrift.TException;
  public long getCounter(java.lang.String) throws org.apache.thrift.TException;
  public void setOption(java.lang.String, java.lang.String) throws org.apache.thrift.TException;
  public java.lang.String getOption(java.lang.String) throws org.apache.thrift.TException;
  public java.util.Map<java.lang.String, java.lang.String> getOptions() throws org.apache.thrift.TException;
  public java.lang.String getCpuProfile(int) throws org.apache.thrift.TException;
  public long aliveSince() throws org.apache.thrift.TException;
  public void reinitialize() throws org.apache.thrift.TException;
  public void shutdown() throws org.apache.thrift.TException;
}
Compiled from "ScribeServerMainClass.java"
public class com.realtimecep.scribe.ScribeServerMainClass {
  public com.realtimecep.scribe.ScribeServerMainClass();
  public static void main(java.lang.String[]);
}
Compiled from "EncodingUtils.java"
public class org.apache.thrift.EncodingUtils {
  public org.apache.thrift.EncodingUtils();
  public static final void encodeBigEndian(int, byte[]);
  public static final void encodeBigEndian(int, byte[], int);
  public static final int decodeBigEndian(byte[]);
  public static final int decodeBigEndian(byte[], int);
}
Compiled from "ShortStack.java"
public class org.apache.thrift.ShortStack {
  public org.apache.thrift.ShortStack(int);
  public short pop();
  public void push(short);
  public short peek();
  public void clear();
  public java.lang.String toString();
}
Compiled from "TApplicationException.java"
public class org.apache.thrift.TApplicationException extends org.apache.thrift.TException {
  public static final int UNKNOWN;
  public static final int UNKNOWN_METHOD;
  public static final int INVALID_MESSAGE_TYPE;
  public static final int WRONG_METHOD_NAME;
  public static final int BAD_SEQUENCE_ID;
  public static final int MISSING_RESULT;
  public static final int INTERNAL_ERROR;
  public static final int PROTOCOL_ERROR;
  protected int type_;
  public org.apache.thrift.TApplicationException();
  public org.apache.thrift.TApplicationException(int);
  public org.apache.thrift.TApplicationException(int, java.lang.String);
  public org.apache.thrift.TApplicationException(java.lang.String);
  public int getType();
  public static org.apache.thrift.TApplicationException read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  static {};
}
Compiled from "TBase.java"
public interface org.apache.thrift.TBase<T extends org.apache.thrift.TBase, F extends org.apache.thrift.TFieldIdEnum> extends java.lang.Comparable<T>, java.io.Serializable {
  public abstract void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public abstract void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public abstract F fieldForId(int);
  public abstract boolean isSet(F);
  public abstract java.lang.Object getFieldValue(F);
  public abstract void setFieldValue(F, java.lang.Object);
  public abstract org.apache.thrift.TBase<T, F> deepCopy();
  public abstract void clear();
}
Compiled from "TBaseHelper.java"
public final class org.apache.thrift.TBaseHelper {
  public static int compareTo(java.lang.Object, java.lang.Object);
  public static int compareTo(boolean, boolean);
  public static int compareTo(byte, byte);
  public static int compareTo(short, short);
  public static int compareTo(int, int);
  public static int compareTo(long, long);
  public static int compareTo(double, double);
  public static int compareTo(java.lang.String, java.lang.String);
  public static int compareTo(byte[], byte[]);
  public static int compareTo(java.lang.Comparable, java.lang.Comparable);
  public static int compareTo(java.util.List, java.util.List);
  public static int compareTo(java.util.Set, java.util.Set);
  public static int compareTo(java.util.Map, java.util.Map);
  public static void toString(java.nio.ByteBuffer, java.lang.StringBuilder);
  public static java.lang.String paddedByteString(byte);
  public static byte[] byteBufferToByteArray(java.nio.ByteBuffer);
  public static boolean wrapsFullArray(java.nio.ByteBuffer);
  public static int byteBufferToByteArray(java.nio.ByteBuffer, byte[], int);
  public static java.nio.ByteBuffer rightSize(java.nio.ByteBuffer);
  public static java.nio.ByteBuffer copyBinary(java.nio.ByteBuffer);
  public static byte[] copyBinary(byte[]);
  static {};
}
Compiled from "TBaseHelper.java"
class org.apache.thrift.TBaseHelper$1 {
}
Compiled from "TBaseHelper.java"
class org.apache.thrift.TBaseHelper$NestedStructureComparator implements java.util.Comparator {
  public int compare(java.lang.Object, java.lang.Object);
  org.apache.thrift.TBaseHelper$NestedStructureComparator(org.apache.thrift.TBaseHelper$1);
}
Compiled from "TByteArrayOutputStream.java"
public class org.apache.thrift.TByteArrayOutputStream extends java.io.ByteArrayOutputStream {
  public org.apache.thrift.TByteArrayOutputStream(int);
  public org.apache.thrift.TByteArrayOutputStream();
  public byte[] get();
  public int len();
}
Compiled from "TDeserializer.java"
public class org.apache.thrift.TDeserializer {
  public org.apache.thrift.TDeserializer();
  public org.apache.thrift.TDeserializer(org.apache.thrift.protocol.TProtocolFactory);
  public void deserialize(org.apache.thrift.TBase, byte[]) throws org.apache.thrift.TException;
  public void deserialize(org.apache.thrift.TBase, java.lang.String, java.lang.String) throws org.apache.thrift.TException;
  public void partialDeserialize(org.apache.thrift.TBase, byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.lang.Boolean partialDeserializeBool(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.lang.Byte partialDeserializeByte(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.lang.Double partialDeserializeDouble(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.lang.Short partialDeserializeI16(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.lang.Integer partialDeserializeI32(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.lang.Long partialDeserializeI64(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.lang.String partialDeserializeString(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.nio.ByteBuffer partialDeserializeByteArray(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public java.lang.Short partialDeserializeSetFieldIdInUnion(byte[], org.apache.thrift.TFieldIdEnum, org.apache.thrift.TFieldIdEnum...) throws org.apache.thrift.TException;
  public void fromString(org.apache.thrift.TBase, java.lang.String) throws org.apache.thrift.TException;
}
Compiled from "TEnum.java"
public interface org.apache.thrift.TEnum {
  public abstract int getValue();
}
Compiled from "TException.java"
public class org.apache.thrift.TException extends java.lang.Exception {
  public org.apache.thrift.TException();
  public org.apache.thrift.TException(java.lang.String);
  public org.apache.thrift.TException(java.lang.Throwable);
  public org.apache.thrift.TException(java.lang.String, java.lang.Throwable);
}
Compiled from "TFieldIdEnum.java"
public interface org.apache.thrift.TFieldIdEnum {
  public abstract short getThriftFieldId();
  public abstract java.lang.String getFieldName();
}
Compiled from "TFieldRequirementType.java"
public final class org.apache.thrift.TFieldRequirementType {
  public static final byte REQUIRED;
  public static final byte OPTIONAL;
  public static final byte DEFAULT;
  public org.apache.thrift.TFieldRequirementType();
}
Compiled from "TProcessor.java"
public interface org.apache.thrift.TProcessor {
  public abstract boolean process(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
}
Compiled from "TProcessorFactory.java"
public class org.apache.thrift.TProcessorFactory {
  public org.apache.thrift.TProcessorFactory(org.apache.thrift.TProcessor);
  public org.apache.thrift.TProcessor getProcessor(org.apache.thrift.transport.TTransport);
}
Compiled from "TSerializer.java"
public class org.apache.thrift.TSerializer {
  public org.apache.thrift.TSerializer();
  public org.apache.thrift.TSerializer(org.apache.thrift.protocol.TProtocolFactory);
  public byte[] serialize(org.apache.thrift.TBase) throws org.apache.thrift.TException;
  public java.lang.String toString(org.apache.thrift.TBase, java.lang.String) throws org.apache.thrift.TException;
  public java.lang.String toString(org.apache.thrift.TBase) throws org.apache.thrift.TException;
}
Compiled from "TServiceClient.java"
public interface org.apache.thrift.TServiceClient {
  public abstract org.apache.thrift.protocol.TProtocol getInputProtocol();
  public abstract org.apache.thrift.protocol.TProtocol getOutputProtocol();
}
Compiled from "TServiceClientFactory.java"
public interface org.apache.thrift.TServiceClientFactory<T extends org.apache.thrift.TServiceClient> {
  public abstract T getClient(org.apache.thrift.protocol.TProtocol);
  public abstract T getClient(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol);
}
Compiled from "TUnion.java"
public abstract class org.apache.thrift.TUnion<T extends org.apache.thrift.TUnion, F extends org.apache.thrift.TFieldIdEnum> implements org.apache.thrift.TBase<T, F> {
  protected java.lang.Object value_;
  protected F setField_;
  protected org.apache.thrift.TUnion();
  protected org.apache.thrift.TUnion(F, java.lang.Object);
  protected org.apache.thrift.TUnion(org.apache.thrift.TUnion<T, F>);
  public F getSetField();
  public java.lang.Object getFieldValue();
  public java.lang.Object getFieldValue(F);
  public java.lang.Object getFieldValue(int);
  public boolean isSet();
  public boolean isSet(F);
  public boolean isSet(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void setFieldValue(F, java.lang.Object);
  public void setFieldValue(int, java.lang.Object);
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  protected abstract void checkType(F, java.lang.Object) throws java.lang.ClassCastException;
  protected abstract java.lang.Object readValue(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TField) throws org.apache.thrift.TException;
  protected abstract void writeValue(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  protected abstract org.apache.thrift.protocol.TStruct getStructDesc();
  protected abstract org.apache.thrift.protocol.TField getFieldDesc(F);
  protected abstract F enumForId(short);
  public java.lang.String toString();
  public final void clear();
}
Compiled from "AsyncMethodCallback.java"
public interface org.apache.thrift.async.AsyncMethodCallback<T> {
  public abstract void onComplete(T);
  public abstract void onError(java.lang.Throwable);
}
Compiled from "TAsyncClient.java"
public abstract class org.apache.thrift.async.TAsyncClient {
  protected final org.apache.thrift.protocol.TProtocolFactory protocolFactory;
  protected final org.apache.thrift.transport.TNonblockingTransport transport;
  protected final org.apache.thrift.async.TAsyncClientManager manager;
  public org.apache.thrift.async.TAsyncClient(org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.async.TAsyncClientManager, org.apache.thrift.transport.TNonblockingTransport);
  public org.apache.thrift.async.TAsyncClient(org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.async.TAsyncClientManager, org.apache.thrift.transport.TNonblockingTransport, long);
  public org.apache.thrift.protocol.TProtocolFactory getProtocolFactory();
  public long getTimeout();
  public boolean hasTimeout();
  public void setTimeout(long);
  public boolean hasError();
  public java.lang.Throwable getError();
  protected void checkReady();
  protected void onComplete();
  protected void onError(java.lang.Throwable);
}
Compiled from "TAsyncClientFactory.java"
public interface org.apache.thrift.async.TAsyncClientFactory<T extends org.apache.thrift.async.TAsyncClient> {
  public abstract T getAsyncClient(org.apache.thrift.transport.TNonblockingTransport);
}
Compiled from "TAsyncClientManager.java"
public class org.apache.thrift.async.TAsyncClientManager {
  public org.apache.thrift.async.TAsyncClientManager() throws java.io.IOException;
  public void call(org.apache.thrift.async.TAsyncMethodCall) throws org.apache.thrift.TException;
  public void stop();
  static org.slf4j.Logger access$000();
  static java.util.concurrent.ConcurrentLinkedQueue access$100(org.apache.thrift.async.TAsyncClientManager);
  static {};
}
Compiled from "TAsyncClientManager.java"
class org.apache.thrift.async.TAsyncClientManager$SelectThread extends java.lang.Thread {
  final org.apache.thrift.async.TAsyncClientManager this$0;
  public org.apache.thrift.async.TAsyncClientManager$SelectThread(org.apache.thrift.async.TAsyncClientManager) throws java.io.IOException;
  public java.nio.channels.Selector getSelector();
  public void finish();
  public void run();
}
Compiled from "TAsyncMethodCall.java"
public abstract class org.apache.thrift.async.TAsyncMethodCall<T extends org.apache.thrift.async.TAsyncMethodCall> {
  protected final org.apache.thrift.transport.TNonblockingTransport transport;
  protected final org.apache.thrift.async.TAsyncClient client;
  protected org.apache.thrift.async.TAsyncMethodCall(org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport, org.apache.thrift.async.AsyncMethodCallback<T>, boolean);
  protected org.apache.thrift.async.TAsyncMethodCall$State getState();
  protected boolean isFinished();
  protected long getLastTransitionTime();
  public org.apache.thrift.async.TAsyncClient getClient();
  protected abstract void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  protected void prepareMethodCall() throws org.apache.thrift.TException;
  void start(java.nio.channels.Selector) throws java.io.IOException;
  void registerForFirstWrite(java.nio.channels.SelectionKey) throws java.io.IOException;
  protected java.nio.ByteBuffer getFrameBuffer();
  protected void transition(java.nio.channels.SelectionKey);
  protected void onError(java.lang.Throwable);
}
Compiled from "TAsyncMethodCall.java"
class org.apache.thrift.async.TAsyncMethodCall$1 {
  static final int[] $SwitchMap$org$apache$thrift$async$TAsyncMethodCall$State;
  static {};
}
Compiled from "TAsyncMethodCall.java"
public final class org.apache.thrift.async.TAsyncMethodCall$State extends java.lang.Enum<org.apache.thrift.async.TAsyncMethodCall$State> {
  public static final org.apache.thrift.async.TAsyncMethodCall$State CONNECTING;
  public static final org.apache.thrift.async.TAsyncMethodCall$State WRITING_REQUEST_SIZE;
  public static final org.apache.thrift.async.TAsyncMethodCall$State WRITING_REQUEST_BODY;
  public static final org.apache.thrift.async.TAsyncMethodCall$State READING_RESPONSE_SIZE;
  public static final org.apache.thrift.async.TAsyncMethodCall$State READING_RESPONSE_BODY;
  public static final org.apache.thrift.async.TAsyncMethodCall$State RESPONSE_READ;
  public static final org.apache.thrift.async.TAsyncMethodCall$State ERROR;
  public static org.apache.thrift.async.TAsyncMethodCall$State[] values();
  public static org.apache.thrift.async.TAsyncMethodCall$State valueOf(java.lang.String);
  static {};
}
Compiled from "EnumMetaData.java"
public class org.apache.thrift.meta_data.EnumMetaData extends org.apache.thrift.meta_data.FieldValueMetaData {
  public final java.lang.Class<? extends org.apache.thrift.TEnum> enumClass;
  public org.apache.thrift.meta_data.EnumMetaData(byte, java.lang.Class<? extends org.apache.thrift.TEnum>);
}
Compiled from "FieldMetaData.java"
public class org.apache.thrift.meta_data.FieldMetaData implements java.io.Serializable {
  public final java.lang.String fieldName;
  public final byte requirementType;
  public final org.apache.thrift.meta_data.FieldValueMetaData valueMetaData;
  public org.apache.thrift.meta_data.FieldMetaData(java.lang.String, byte, org.apache.thrift.meta_data.FieldValueMetaData);
  public static void addStructMetaDataMap(java.lang.Class<? extends org.apache.thrift.TBase>, java.util.Map<? extends org.apache.thrift.TFieldIdEnum, org.apache.thrift.meta_data.FieldMetaData>);
  public static java.util.Map<? extends org.apache.thrift.TFieldIdEnum, org.apache.thrift.meta_data.FieldMetaData> getStructMetaDataMap(java.lang.Class<? extends org.apache.thrift.TBase>);
  static {};
}
Compiled from "FieldValueMetaData.java"
public class org.apache.thrift.meta_data.FieldValueMetaData implements java.io.Serializable {
  public final byte type;
  public org.apache.thrift.meta_data.FieldValueMetaData(byte);
  public org.apache.thrift.meta_data.FieldValueMetaData(byte, java.lang.String);
  public boolean isTypedef();
  public java.lang.String getTypedefName();
  public boolean isStruct();
  public boolean isContainer();
}
Compiled from "ListMetaData.java"
public class org.apache.thrift.meta_data.ListMetaData extends org.apache.thrift.meta_data.FieldValueMetaData {
  public final org.apache.thrift.meta_data.FieldValueMetaData elemMetaData;
  public org.apache.thrift.meta_data.ListMetaData(byte, org.apache.thrift.meta_data.FieldValueMetaData);
}
Compiled from "MapMetaData.java"
public class org.apache.thrift.meta_data.MapMetaData extends org.apache.thrift.meta_data.FieldValueMetaData {
  public final org.apache.thrift.meta_data.FieldValueMetaData keyMetaData;
  public final org.apache.thrift.meta_data.FieldValueMetaData valueMetaData;
  public org.apache.thrift.meta_data.MapMetaData(byte, org.apache.thrift.meta_data.FieldValueMetaData, org.apache.thrift.meta_data.FieldValueMetaData);
}
Compiled from "SetMetaData.java"
public class org.apache.thrift.meta_data.SetMetaData extends org.apache.thrift.meta_data.FieldValueMetaData {
  public final org.apache.thrift.meta_data.FieldValueMetaData elemMetaData;
  public org.apache.thrift.meta_data.SetMetaData(byte, org.apache.thrift.meta_data.FieldValueMetaData);
}
Compiled from "StructMetaData.java"
public class org.apache.thrift.meta_data.StructMetaData extends org.apache.thrift.meta_data.FieldValueMetaData {
  public final java.lang.Class<? extends org.apache.thrift.TBase> structClass;
  public org.apache.thrift.meta_data.StructMetaData(byte, java.lang.Class<? extends org.apache.thrift.TBase>);
}
Compiled from "TBase64Utils.java"
class org.apache.thrift.protocol.TBase64Utils {
  org.apache.thrift.protocol.TBase64Utils();
  static final void encode(byte[], int, int, byte[], int);
  static final void decode(byte[], int, int, byte[], int);
  static {};
}
Compiled from "TBinaryProtocol.java"
public class org.apache.thrift.protocol.TBinaryProtocol extends org.apache.thrift.protocol.TProtocol {
  protected static final int VERSION_MASK;
  protected static final int VERSION_1;
  protected boolean strictRead_;
  protected boolean strictWrite_;
  protected int readLength_;
  protected boolean checkReadLength_;
  public org.apache.thrift.protocol.TBinaryProtocol(org.apache.thrift.transport.TTransport);
  public org.apache.thrift.protocol.TBinaryProtocol(org.apache.thrift.transport.TTransport, boolean, boolean);
  public void writeMessageBegin(org.apache.thrift.protocol.TMessage) throws org.apache.thrift.TException;
  public void writeMessageEnd();
  public void writeStructBegin(org.apache.thrift.protocol.TStruct);
  public void writeStructEnd();
  public void writeFieldBegin(org.apache.thrift.protocol.TField) throws org.apache.thrift.TException;
  public void writeFieldEnd();
  public void writeFieldStop() throws org.apache.thrift.TException;
  public void writeMapBegin(org.apache.thrift.protocol.TMap) throws org.apache.thrift.TException;
  public void writeMapEnd();
  public void writeListBegin(org.apache.thrift.protocol.TList) throws org.apache.thrift.TException;
  public void writeListEnd();
  public void writeSetBegin(org.apache.thrift.protocol.TSet) throws org.apache.thrift.TException;
  public void writeSetEnd();
  public void writeBool(boolean) throws org.apache.thrift.TException;
  public void writeByte(byte) throws org.apache.thrift.TException;
  public void writeI16(short) throws org.apache.thrift.TException;
  public void writeI32(int) throws org.apache.thrift.TException;
  public void writeI64(long) throws org.apache.thrift.TException;
  public void writeDouble(double) throws org.apache.thrift.TException;
  public void writeString(java.lang.String) throws org.apache.thrift.TException;
  public void writeBinary(java.nio.ByteBuffer) throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TMessage readMessageBegin() throws org.apache.thrift.TException;
  public void readMessageEnd();
  public org.apache.thrift.protocol.TStruct readStructBegin();
  public void readStructEnd();
  public org.apache.thrift.protocol.TField readFieldBegin() throws org.apache.thrift.TException;
  public void readFieldEnd();
  public org.apache.thrift.protocol.TMap readMapBegin() throws org.apache.thrift.TException;
  public void readMapEnd();
  public org.apache.thrift.protocol.TList readListBegin() throws org.apache.thrift.TException;
  public void readListEnd();
  public org.apache.thrift.protocol.TSet readSetBegin() throws org.apache.thrift.TException;
  public void readSetEnd();
  public boolean readBool() throws org.apache.thrift.TException;
  public byte readByte() throws org.apache.thrift.TException;
  public short readI16() throws org.apache.thrift.TException;
  public int readI32() throws org.apache.thrift.TException;
  public long readI64() throws org.apache.thrift.TException;
  public double readDouble() throws org.apache.thrift.TException;
  public java.lang.String readString() throws org.apache.thrift.TException;
  public java.lang.String readStringBody(int) throws org.apache.thrift.TException;
  public java.nio.ByteBuffer readBinary() throws org.apache.thrift.TException;
  public void setReadLength(int);
  protected void checkReadLength(int) throws org.apache.thrift.TException;
  static {};
}
Compiled from "TBinaryProtocol.java"
public class org.apache.thrift.protocol.TBinaryProtocol$Factory implements org.apache.thrift.protocol.TProtocolFactory {
  protected boolean strictRead_;
  protected boolean strictWrite_;
  protected int readLength_;
  public org.apache.thrift.protocol.TBinaryProtocol$Factory();
  public org.apache.thrift.protocol.TBinaryProtocol$Factory(boolean, boolean);
  public org.apache.thrift.protocol.TBinaryProtocol$Factory(boolean, boolean, int);
  public org.apache.thrift.protocol.TProtocol getProtocol(org.apache.thrift.transport.TTransport);
}
Compiled from "TCompactProtocol.java"
public final class org.apache.thrift.protocol.TCompactProtocol extends org.apache.thrift.protocol.TProtocol {
  byte[] i32buf;
  byte[] varint64out;
  byte[] byteRawBuf;
  public org.apache.thrift.protocol.TCompactProtocol(org.apache.thrift.transport.TTransport);
  public void reset();
  public void writeMessageBegin(org.apache.thrift.protocol.TMessage) throws org.apache.thrift.TException;
  public void writeStructBegin(org.apache.thrift.protocol.TStruct) throws org.apache.thrift.TException;
  public void writeStructEnd() throws org.apache.thrift.TException;
  public void writeFieldBegin(org.apache.thrift.protocol.TField) throws org.apache.thrift.TException;
  public void writeFieldStop() throws org.apache.thrift.TException;
  public void writeMapBegin(org.apache.thrift.protocol.TMap) throws org.apache.thrift.TException;
  public void writeListBegin(org.apache.thrift.protocol.TList) throws org.apache.thrift.TException;
  public void writeSetBegin(org.apache.thrift.protocol.TSet) throws org.apache.thrift.TException;
  public void writeBool(boolean) throws org.apache.thrift.TException;
  public void writeByte(byte) throws org.apache.thrift.TException;
  public void writeI16(short) throws org.apache.thrift.TException;
  public void writeI32(int) throws org.apache.thrift.TException;
  public void writeI64(long) throws org.apache.thrift.TException;
  public void writeDouble(double) throws org.apache.thrift.TException;
  public void writeString(java.lang.String) throws org.apache.thrift.TException;
  public void writeBinary(java.nio.ByteBuffer) throws org.apache.thrift.TException;
  public void writeMessageEnd() throws org.apache.thrift.TException;
  public void writeMapEnd() throws org.apache.thrift.TException;
  public void writeListEnd() throws org.apache.thrift.TException;
  public void writeSetEnd() throws org.apache.thrift.TException;
  public void writeFieldEnd() throws org.apache.thrift.TException;
  protected void writeCollectionBegin(byte, int) throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TMessage readMessageBegin() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TStruct readStructBegin() throws org.apache.thrift.TException;
  public void readStructEnd() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TField readFieldBegin() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TMap readMapBegin() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TList readListBegin() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TSet readSetBegin() throws org.apache.thrift.TException;
  public boolean readBool() throws org.apache.thrift.TException;
  public byte readByte() throws org.apache.thrift.TException;
  public short readI16() throws org.apache.thrift.TException;
  public int readI32() throws org.apache.thrift.TException;
  public long readI64() throws org.apache.thrift.TException;
  public double readDouble() throws org.apache.thrift.TException;
  public java.lang.String readString() throws org.apache.thrift.TException;
  public java.nio.ByteBuffer readBinary() throws org.apache.thrift.TException;
  public void readMessageEnd() throws org.apache.thrift.TException;
  public void readFieldEnd() throws org.apache.thrift.TException;
  public void readMapEnd() throws org.apache.thrift.TException;
  public void readListEnd() throws org.apache.thrift.TException;
  public void readSetEnd() throws org.apache.thrift.TException;
  static {};
}
Compiled from "TCompactProtocol.java"
public class org.apache.thrift.protocol.TCompactProtocol$Factory implements org.apache.thrift.protocol.TProtocolFactory {
  public org.apache.thrift.protocol.TCompactProtocol$Factory();
  public org.apache.thrift.protocol.TProtocol getProtocol(org.apache.thrift.transport.TTransport);
}
Compiled from "TCompactProtocol.java"
class org.apache.thrift.protocol.TCompactProtocol$Types {
  public static final byte BOOLEAN_TRUE;
  public static final byte BOOLEAN_FALSE;
  public static final byte BYTE;
  public static final byte I16;
  public static final byte I32;
  public static final byte I64;
  public static final byte DOUBLE;
  public static final byte BINARY;
  public static final byte LIST;
  public static final byte SET;
  public static final byte MAP;
  public static final byte STRUCT;
}
Compiled from "TField.java"
public class org.apache.thrift.protocol.TField {
  public final java.lang.String name;
  public final byte type;
  public final short id;
  public org.apache.thrift.protocol.TField();
  public org.apache.thrift.protocol.TField(java.lang.String, byte, short);
  public java.lang.String toString();
  public boolean equals(org.apache.thrift.protocol.TField);
}
Compiled from "TJSONProtocol.java"
public class org.apache.thrift.protocol.TJSONProtocol extends org.apache.thrift.protocol.TProtocol {
  public org.apache.thrift.protocol.TJSONProtocol(org.apache.thrift.transport.TTransport);
  public void reset();
  protected void readJSONSyntaxChar(byte[]) throws org.apache.thrift.TException;
  public void writeMessageBegin(org.apache.thrift.protocol.TMessage) throws org.apache.thrift.TException;
  public void writeMessageEnd() throws org.apache.thrift.TException;
  public void writeStructBegin(org.apache.thrift.protocol.TStruct) throws org.apache.thrift.TException;
  public void writeStructEnd() throws org.apache.thrift.TException;
  public void writeFieldBegin(org.apache.thrift.protocol.TField) throws org.apache.thrift.TException;
  public void writeFieldEnd() throws org.apache.thrift.TException;
  public void writeFieldStop();
  public void writeMapBegin(org.apache.thrift.protocol.TMap) throws org.apache.thrift.TException;
  public void writeMapEnd() throws org.apache.thrift.TException;
  public void writeListBegin(org.apache.thrift.protocol.TList) throws org.apache.thrift.TException;
  public void writeListEnd() throws org.apache.thrift.TException;
  public void writeSetBegin(org.apache.thrift.protocol.TSet) throws org.apache.thrift.TException;
  public void writeSetEnd() throws org.apache.thrift.TException;
  public void writeBool(boolean) throws org.apache.thrift.TException;
  public void writeByte(byte) throws org.apache.thrift.TException;
  public void writeI16(short) throws org.apache.thrift.TException;
  public void writeI32(int) throws org.apache.thrift.TException;
  public void writeI64(long) throws org.apache.thrift.TException;
  public void writeDouble(double) throws org.apache.thrift.TException;
  public void writeString(java.lang.String) throws org.apache.thrift.TException;
  public void writeBinary(java.nio.ByteBuffer) throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TMessage readMessageBegin() throws org.apache.thrift.TException;
  public void readMessageEnd() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TStruct readStructBegin() throws org.apache.thrift.TException;
  public void readStructEnd() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TField readFieldBegin() throws org.apache.thrift.TException;
  public void readFieldEnd() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TMap readMapBegin() throws org.apache.thrift.TException;
  public void readMapEnd() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TList readListBegin() throws org.apache.thrift.TException;
  public void readListEnd() throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TSet readSetBegin() throws org.apache.thrift.TException;
  public void readSetEnd() throws org.apache.thrift.TException;
  public boolean readBool() throws org.apache.thrift.TException;
  public byte readByte() throws org.apache.thrift.TException;
  public short readI16() throws org.apache.thrift.TException;
  public int readI32() throws org.apache.thrift.TException;
  public long readI64() throws org.apache.thrift.TException;
  public double readDouble() throws org.apache.thrift.TException;
  public java.lang.String readString() throws org.apache.thrift.TException;
  public java.nio.ByteBuffer readBinary() throws org.apache.thrift.TException;
  static byte[] access$000();
  static byte[] access$100();
  static {};
}
Compiled from "TJSONProtocol.java"
public class org.apache.thrift.protocol.TJSONProtocol$Factory implements org.apache.thrift.protocol.TProtocolFactory {
  public org.apache.thrift.protocol.TJSONProtocol$Factory();
  public org.apache.thrift.protocol.TProtocol getProtocol(org.apache.thrift.transport.TTransport);
}
Compiled from "TJSONProtocol.java"
public class org.apache.thrift.protocol.TJSONProtocol$JSONBaseContext {
  final org.apache.thrift.protocol.TJSONProtocol this$0;
  protected org.apache.thrift.protocol.TJSONProtocol$JSONBaseContext(org.apache.thrift.protocol.TJSONProtocol);
  protected void write() throws org.apache.thrift.TException;
  protected void read() throws org.apache.thrift.TException;
  protected boolean escapeNum();
}
Compiled from "TJSONProtocol.java"
public class org.apache.thrift.protocol.TJSONProtocol$JSONListContext extends org.apache.thrift.protocol.TJSONProtocol$JSONBaseContext {
  final org.apache.thrift.protocol.TJSONProtocol this$0;
  protected org.apache.thrift.protocol.TJSONProtocol$JSONListContext(org.apache.thrift.protocol.TJSONProtocol);
  protected void write() throws org.apache.thrift.TException;
  protected void read() throws org.apache.thrift.TException;
}
Compiled from "TJSONProtocol.java"
public class org.apache.thrift.protocol.TJSONProtocol$JSONPairContext extends org.apache.thrift.protocol.TJSONProtocol$JSONBaseContext {
  final org.apache.thrift.protocol.TJSONProtocol this$0;
  protected org.apache.thrift.protocol.TJSONProtocol$JSONPairContext(org.apache.thrift.protocol.TJSONProtocol);
  protected void write() throws org.apache.thrift.TException;
  protected void read() throws org.apache.thrift.TException;
  protected boolean escapeNum();
}
Compiled from "TJSONProtocol.java"
public class org.apache.thrift.protocol.TJSONProtocol$LookaheadReader {
  final org.apache.thrift.protocol.TJSONProtocol this$0;
  protected org.apache.thrift.protocol.TJSONProtocol$LookaheadReader(org.apache.thrift.protocol.TJSONProtocol);
  protected byte read() throws org.apache.thrift.TException;
  protected byte peek() throws org.apache.thrift.TException;
}
Compiled from "TList.java"
public final class org.apache.thrift.protocol.TList {
  public final byte elemType;
  public final int size;
  public org.apache.thrift.protocol.TList();
  public org.apache.thrift.protocol.TList(byte, int);
}
Compiled from "TMap.java"
public final class org.apache.thrift.protocol.TMap {
  public final byte keyType;
  public final byte valueType;
  public final int size;
  public org.apache.thrift.protocol.TMap();
  public org.apache.thrift.protocol.TMap(byte, byte, int);
}
Compiled from "TMessage.java"
public final class org.apache.thrift.protocol.TMessage {
  public final java.lang.String name;
  public final byte type;
  public final int seqid;
  public org.apache.thrift.protocol.TMessage();
  public org.apache.thrift.protocol.TMessage(java.lang.String, byte, int);
  public java.lang.String toString();
  public boolean equals(java.lang.Object);
  public boolean equals(org.apache.thrift.protocol.TMessage);
}
Compiled from "TMessageType.java"
public final class org.apache.thrift.protocol.TMessageType {
  public static final byte CALL;
  public static final byte REPLY;
  public static final byte EXCEPTION;
  public static final byte ONEWAY;
  public org.apache.thrift.protocol.TMessageType();
}
Compiled from "TProtocol.java"
public abstract class org.apache.thrift.protocol.TProtocol {
  protected org.apache.thrift.transport.TTransport trans_;
  protected org.apache.thrift.protocol.TProtocol(org.apache.thrift.transport.TTransport);
  public org.apache.thrift.transport.TTransport getTransport();
  public abstract void writeMessageBegin(org.apache.thrift.protocol.TMessage) throws org.apache.thrift.TException;
  public abstract void writeMessageEnd() throws org.apache.thrift.TException;
  public abstract void writeStructBegin(org.apache.thrift.protocol.TStruct) throws org.apache.thrift.TException;
  public abstract void writeStructEnd() throws org.apache.thrift.TException;
  public abstract void writeFieldBegin(org.apache.thrift.protocol.TField) throws org.apache.thrift.TException;
  public abstract void writeFieldEnd() throws org.apache.thrift.TException;
  public abstract void writeFieldStop() throws org.apache.thrift.TException;
  public abstract void writeMapBegin(org.apache.thrift.protocol.TMap) throws org.apache.thrift.TException;
  public abstract void writeMapEnd() throws org.apache.thrift.TException;
  public abstract void writeListBegin(org.apache.thrift.protocol.TList) throws org.apache.thrift.TException;
  public abstract void writeListEnd() throws org.apache.thrift.TException;
  public abstract void writeSetBegin(org.apache.thrift.protocol.TSet) throws org.apache.thrift.TException;
  public abstract void writeSetEnd() throws org.apache.thrift.TException;
  public abstract void writeBool(boolean) throws org.apache.thrift.TException;
  public abstract void writeByte(byte) throws org.apache.thrift.TException;
  public abstract void writeI16(short) throws org.apache.thrift.TException;
  public abstract void writeI32(int) throws org.apache.thrift.TException;
  public abstract void writeI64(long) throws org.apache.thrift.TException;
  public abstract void writeDouble(double) throws org.apache.thrift.TException;
  public abstract void writeString(java.lang.String) throws org.apache.thrift.TException;
  public abstract void writeBinary(java.nio.ByteBuffer) throws org.apache.thrift.TException;
  public abstract org.apache.thrift.protocol.TMessage readMessageBegin() throws org.apache.thrift.TException;
  public abstract void readMessageEnd() throws org.apache.thrift.TException;
  public abstract org.apache.thrift.protocol.TStruct readStructBegin() throws org.apache.thrift.TException;
  public abstract void readStructEnd() throws org.apache.thrift.TException;
  public abstract org.apache.thrift.protocol.TField readFieldBegin() throws org.apache.thrift.TException;
  public abstract void readFieldEnd() throws org.apache.thrift.TException;
  public abstract org.apache.thrift.protocol.TMap readMapBegin() throws org.apache.thrift.TException;
  public abstract void readMapEnd() throws org.apache.thrift.TException;
  public abstract org.apache.thrift.protocol.TList readListBegin() throws org.apache.thrift.TException;
  public abstract void readListEnd() throws org.apache.thrift.TException;
  public abstract org.apache.thrift.protocol.TSet readSetBegin() throws org.apache.thrift.TException;
  public abstract void readSetEnd() throws org.apache.thrift.TException;
  public abstract boolean readBool() throws org.apache.thrift.TException;
  public abstract byte readByte() throws org.apache.thrift.TException;
  public abstract short readI16() throws org.apache.thrift.TException;
  public abstract int readI32() throws org.apache.thrift.TException;
  public abstract long readI64() throws org.apache.thrift.TException;
  public abstract double readDouble() throws org.apache.thrift.TException;
  public abstract java.lang.String readString() throws org.apache.thrift.TException;
  public abstract java.nio.ByteBuffer readBinary() throws org.apache.thrift.TException;
  public void reset();
}
Compiled from "TProtocolException.java"
public class org.apache.thrift.protocol.TProtocolException extends org.apache.thrift.TException {
  public static final int UNKNOWN;
  public static final int INVALID_DATA;
  public static final int NEGATIVE_SIZE;
  public static final int SIZE_LIMIT;
  public static final int BAD_VERSION;
  public static final int NOT_IMPLEMENTED;
  protected int type_;
  public org.apache.thrift.protocol.TProtocolException();
  public org.apache.thrift.protocol.TProtocolException(int);
  public org.apache.thrift.protocol.TProtocolException(int, java.lang.String);
  public org.apache.thrift.protocol.TProtocolException(java.lang.String);
  public org.apache.thrift.protocol.TProtocolException(int, java.lang.Throwable);
  public org.apache.thrift.protocol.TProtocolException(java.lang.Throwable);
  public org.apache.thrift.protocol.TProtocolException(java.lang.String, java.lang.Throwable);
  public org.apache.thrift.protocol.TProtocolException(int, java.lang.String, java.lang.Throwable);
  public int getType();
}
Compiled from "TProtocolFactory.java"
public interface org.apache.thrift.protocol.TProtocolFactory extends java.io.Serializable {
  public abstract org.apache.thrift.protocol.TProtocol getProtocol(org.apache.thrift.transport.TTransport);
}
Compiled from "TProtocolUtil.java"
public class org.apache.thrift.protocol.TProtocolUtil {
  public org.apache.thrift.protocol.TProtocolUtil();
  public static void setMaxSkipDepth(int);
  public static void skip(org.apache.thrift.protocol.TProtocol, byte) throws org.apache.thrift.TException;
  public static void skip(org.apache.thrift.protocol.TProtocol, byte, int) throws org.apache.thrift.TException;
  static {};
}
Compiled from "TSet.java"
public final class org.apache.thrift.protocol.TSet {
  public final byte elemType;
  public final int size;
  public org.apache.thrift.protocol.TSet();
  public org.apache.thrift.protocol.TSet(byte, int);
  public org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TList);
}
Compiled from "TSimpleJSONProtocol.java"
public class org.apache.thrift.protocol.TSimpleJSONProtocol extends org.apache.thrift.protocol.TProtocol {
  public static final byte[] COMMA;
  public static final byte[] COLON;
  public static final byte[] LBRACE;
  public static final byte[] RBRACE;
  public static final byte[] LBRACKET;
  public static final byte[] RBRACKET;
  public static final char QUOTE;
  protected final org.apache.thrift.protocol.TSimpleJSONProtocol$Context BASE_CONTEXT;
  protected java.util.Stack<org.apache.thrift.protocol.TSimpleJSONProtocol$Context> writeContextStack_;
  protected org.apache.thrift.protocol.TSimpleJSONProtocol$Context writeContext_;
  protected void pushWriteContext(org.apache.thrift.protocol.TSimpleJSONProtocol$Context);
  protected void popWriteContext();
  public org.apache.thrift.protocol.TSimpleJSONProtocol(org.apache.thrift.transport.TTransport);
  public void writeMessageBegin(org.apache.thrift.protocol.TMessage) throws org.apache.thrift.TException;
  public void writeMessageEnd() throws org.apache.thrift.TException;
  public void writeStructBegin(org.apache.thrift.protocol.TStruct) throws org.apache.thrift.TException;
  public void writeStructEnd() throws org.apache.thrift.TException;
  public void writeFieldBegin(org.apache.thrift.protocol.TField) throws org.apache.thrift.TException;
  public void writeFieldEnd();
  public void writeFieldStop();
  public void writeMapBegin(org.apache.thrift.protocol.TMap) throws org.apache.thrift.TException;
  public void writeMapEnd() throws org.apache.thrift.TException;
  public void writeListBegin(org.apache.thrift.protocol.TList) throws org.apache.thrift.TException;
  public void writeListEnd() throws org.apache.thrift.TException;
  public void writeSetBegin(org.apache.thrift.protocol.TSet) throws org.apache.thrift.TException;
  public void writeSetEnd() throws org.apache.thrift.TException;
  public void writeBool(boolean) throws org.apache.thrift.TException;
  public void writeByte(byte) throws org.apache.thrift.TException;
  public void writeI16(short) throws org.apache.thrift.TException;
  public void writeI32(int) throws org.apache.thrift.TException;
  public void _writeStringData(java.lang.String) throws org.apache.thrift.TException;
  public void writeI64(long) throws org.apache.thrift.TException;
  public void writeDouble(double) throws org.apache.thrift.TException;
  public void writeString(java.lang.String) throws org.apache.thrift.TException;
  public void writeBinary(java.nio.ByteBuffer) throws org.apache.thrift.TException;
  public org.apache.thrift.protocol.TMessage readMessageBegin() throws org.apache.thrift.TException;
  public void readMessageEnd();
  public org.apache.thrift.protocol.TStruct readStructBegin();
  public void readStructEnd();
  public org.apache.thrift.protocol.TField readFieldBegin() throws org.apache.thrift.TException;
  public void readFieldEnd();
  public org.apache.thrift.protocol.TMap readMapBegin() throws org.apache.thrift.TException;
  public void readMapEnd();
  public org.apache.thrift.protocol.TList readListBegin() throws org.apache.thrift.TException;
  public void readListEnd();
  public org.apache.thrift.protocol.TSet readSetBegin() throws org.apache.thrift.TException;
  public void readSetEnd();
  public boolean readBool() throws org.apache.thrift.TException;
  public byte readByte() throws org.apache.thrift.TException;
  public short readI16() throws org.apache.thrift.TException;
  public int readI32() throws org.apache.thrift.TException;
  public long readI64() throws org.apache.thrift.TException;
  public double readDouble() throws org.apache.thrift.TException;
  public java.lang.String readString() throws org.apache.thrift.TException;
  public java.lang.String readStringBody(int) throws org.apache.thrift.TException;
  public java.nio.ByteBuffer readBinary() throws org.apache.thrift.TException;
  static {};
}
Compiled from "TSimpleJSONProtocol.java"
public class org.apache.thrift.protocol.TSimpleJSONProtocol$Context {
  final org.apache.thrift.protocol.TSimpleJSONProtocol this$0;
  protected org.apache.thrift.protocol.TSimpleJSONProtocol$Context(org.apache.thrift.protocol.TSimpleJSONProtocol);
  protected void write() throws org.apache.thrift.TException;
}
Compiled from "TSimpleJSONProtocol.java"
public class org.apache.thrift.protocol.TSimpleJSONProtocol$Factory implements org.apache.thrift.protocol.TProtocolFactory {
  public org.apache.thrift.protocol.TSimpleJSONProtocol$Factory();
  public org.apache.thrift.protocol.TProtocol getProtocol(org.apache.thrift.transport.TTransport);
}
Compiled from "TSimpleJSONProtocol.java"
public class org.apache.thrift.protocol.TSimpleJSONProtocol$ListContext extends org.apache.thrift.protocol.TSimpleJSONProtocol$Context {
  protected boolean first_;
  final org.apache.thrift.protocol.TSimpleJSONProtocol this$0;
  protected org.apache.thrift.protocol.TSimpleJSONProtocol$ListContext(org.apache.thrift.protocol.TSimpleJSONProtocol);
  protected void write() throws org.apache.thrift.TException;
}
Compiled from "TSimpleJSONProtocol.java"
public class org.apache.thrift.protocol.TSimpleJSONProtocol$StructContext extends org.apache.thrift.protocol.TSimpleJSONProtocol$Context {
  protected boolean first_;
  protected boolean colon_;
  final org.apache.thrift.protocol.TSimpleJSONProtocol this$0;
  protected org.apache.thrift.protocol.TSimpleJSONProtocol$StructContext(org.apache.thrift.protocol.TSimpleJSONProtocol);
  protected void write() throws org.apache.thrift.TException;
}
Compiled from "TStruct.java"
public final class org.apache.thrift.protocol.TStruct {
  public final java.lang.String name;
  public org.apache.thrift.protocol.TStruct();
  public org.apache.thrift.protocol.TStruct(java.lang.String);
}
Compiled from "TType.java"
public final class org.apache.thrift.protocol.TType {
  public static final byte STOP;
  public static final byte VOID;
  public static final byte BOOL;
  public static final byte BYTE;
  public static final byte DOUBLE;
  public static final byte I16;
  public static final byte I32;
  public static final byte I64;
  public static final byte STRING;
  public static final byte STRUCT;
  public static final byte MAP;
  public static final byte SET;
  public static final byte LIST;
  public static final byte ENUM;
  public org.apache.thrift.protocol.TType();
}
Compiled from "THsHaServer.java"
public class org.apache.thrift.server.THsHaServer extends org.apache.thrift.server.TNonblockingServer {
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.server.THsHaServer$Options);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.server.THsHaServer$Options);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.server.THsHaServer$Options);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.server.THsHaServer$Options);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.server.THsHaServer$Options);
  public org.apache.thrift.server.THsHaServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory, java.util.concurrent.ExecutorService, org.apache.thrift.server.TNonblockingServer$Options);
  public void serve();
  protected static java.util.concurrent.ExecutorService createInvokerPool(org.apache.thrift.server.THsHaServer$Options);
  protected void gracefullyShutdownInvokerPool();
  protected boolean requestInvoke(org.apache.thrift.server.TNonblockingServer$FrameBuffer);
  static {};
}
Compiled from "THsHaServer.java"
class org.apache.thrift.server.THsHaServer$Invocation implements java.lang.Runnable {
  final org.apache.thrift.server.THsHaServer this$0;
  public org.apache.thrift.server.THsHaServer$Invocation(org.apache.thrift.server.THsHaServer, org.apache.thrift.server.TNonblockingServer$FrameBuffer);
  public void run();
}
Compiled from "THsHaServer.java"
public class org.apache.thrift.server.THsHaServer$Options extends org.apache.thrift.server.TNonblockingServer$Options {
  public int workerThreads;
  public int stopTimeoutVal;
  public java.util.concurrent.TimeUnit stopTimeoutUnit;
  public org.apache.thrift.server.THsHaServer$Options();
}
Compiled from "TNonblockingServer.java"
public class org.apache.thrift.server.TNonblockingServer extends org.apache.thrift.server.TServer {
  protected final org.apache.thrift.server.TNonblockingServer$Options options_;
  public org.apache.thrift.server.TNonblockingServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport);
  public org.apache.thrift.server.TNonblockingServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport);
  public org.apache.thrift.server.TNonblockingServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TNonblockingServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TNonblockingServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TNonblockingServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TNonblockingServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TNonblockingServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TNonblockingServerTransport, org.apache.thrift.transport.TFramedTransport$Factory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.server.TNonblockingServer$Options);
  public void serve();
  protected boolean startListening();
  protected void stopListening();
  protected boolean startSelectorThread();
  protected void joinSelector();
  public void stop();
  protected boolean requestInvoke(org.apache.thrift.server.TNonblockingServer$FrameBuffer);
  protected void requestSelectInterestChange(org.apache.thrift.server.TNonblockingServer$FrameBuffer);
  public boolean isStopped();
  static boolean access$000(org.apache.thrift.server.TNonblockingServer);
  static org.slf4j.Logger access$100();
  static boolean access$002(org.apache.thrift.server.TNonblockingServer, boolean);
  static long access$200(org.apache.thrift.server.TNonblockingServer);
  static long access$300(org.apache.thrift.server.TNonblockingServer);
  static long access$302(org.apache.thrift.server.TNonblockingServer, long);
  static org.apache.thrift.server.TNonblockingServer$SelectThread access$400(org.apache.thrift.server.TNonblockingServer);
  static {};
}
Compiled from "TNonblockingServer.java"
public class org.apache.thrift.server.TNonblockingServer$FrameBuffer {
  final org.apache.thrift.server.TNonblockingServer this$0;
  public org.apache.thrift.server.TNonblockingServer$FrameBuffer(org.apache.thrift.server.TNonblockingServer, org.apache.thrift.transport.TNonblockingTransport, java.nio.channels.SelectionKey);
  public boolean read();
  public boolean write();
  public void changeSelectInterests();
  public void close();
  public boolean isFrameFullyRead();
  public void responseReady();
  public void invoke();
}
Compiled from "TNonblockingServer.java"
public class org.apache.thrift.server.TNonblockingServer$Options {
  public long maxReadBufferBytes;
  public org.apache.thrift.server.TNonblockingServer$Options();
  public void validate();
}
Compiled from "TNonblockingServer.java"
public class org.apache.thrift.server.TNonblockingServer$SelectThread extends java.lang.Thread {
  final org.apache.thrift.server.TNonblockingServer this$0;
  public org.apache.thrift.server.TNonblockingServer$SelectThread(org.apache.thrift.server.TNonblockingServer, org.apache.thrift.transport.TNonblockingServerTransport) throws java.io.IOException;
  public boolean isStopped();
  public void run();
  public void wakeupSelector();
  public void requestSelectInterestChange(org.apache.thrift.server.TNonblockingServer$FrameBuffer);
}
Compiled from "TServer.java"
public abstract class org.apache.thrift.server.TServer {
  protected org.apache.thrift.TProcessorFactory processorFactory_;
  protected org.apache.thrift.transport.TServerTransport serverTransport_;
  protected org.apache.thrift.transport.TTransportFactory inputTransportFactory_;
  protected org.apache.thrift.transport.TTransportFactory outputTransportFactory_;
  protected org.apache.thrift.protocol.TProtocolFactory inputProtocolFactory_;
  protected org.apache.thrift.protocol.TProtocolFactory outputProtocolFactory_;
  protected org.apache.thrift.server.TServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport);
  protected org.apache.thrift.server.TServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory);
  protected org.apache.thrift.server.TServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory);
  protected org.apache.thrift.server.TServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public abstract void serve();
  public void stop();
}
Compiled from "TServlet.java"
public class org.apache.thrift.server.TServlet extends javax.servlet.http.HttpServlet {
  public org.apache.thrift.server.TServlet(org.apache.thrift.TProcessor, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TServlet(org.apache.thrift.TProcessor, org.apache.thrift.protocol.TProtocolFactory);
  protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException;
  protected void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException;
  public void addCustomHeader(java.lang.String, java.lang.String);
  public void setCustomHeaders(java.util.Collection<java.util.Map$Entry<java.lang.String, java.lang.String>>);
}
Compiled from "TServlet.java"
class org.apache.thrift.server.TServlet$1 implements java.util.Map$Entry<java.lang.String, java.lang.String> {
  final java.lang.String val$key;
  final java.lang.String val$value;
  final org.apache.thrift.server.TServlet this$0;
  org.apache.thrift.server.TServlet$1(org.apache.thrift.server.TServlet, java.lang.String, java.lang.String);
  public java.lang.String getKey();
  public java.lang.String getValue();
  public java.lang.String setValue(java.lang.String);
  public java.lang.Object setValue(java.lang.Object);
  public java.lang.Object getValue();
  public java.lang.Object getKey();
}
Compiled from "TSimpleServer.java"
public class org.apache.thrift.server.TSimpleServer extends org.apache.thrift.server.TServer {
  public org.apache.thrift.server.TSimpleServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TServerTransport);
  public org.apache.thrift.server.TSimpleServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TSimpleServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TSimpleServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport);
  public org.apache.thrift.server.TSimpleServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TSimpleServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public void serve();
  public void stop();
  static {};
}
Compiled from "TThreadPoolServer.java"
public class org.apache.thrift.server.TThreadPoolServer extends org.apache.thrift.server.TServer {
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TServerTransport);
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport);
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TServerTransport, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory);
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessor, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.server.TThreadPoolServer$Options);
  public org.apache.thrift.server.TThreadPoolServer(org.apache.thrift.TProcessorFactory, org.apache.thrift.transport.TServerTransport, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.transport.TTransportFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.server.TThreadPoolServer$Options);
  public void serve();
  public void stop();
  static boolean access$100(org.apache.thrift.server.TThreadPoolServer);
  static org.slf4j.Logger access$200();
  static {};
}
Compiled from "TThreadPoolServer.java"
class org.apache.thrift.server.TThreadPoolServer$1 {
}
Compiled from "TThreadPoolServer.java"
public class org.apache.thrift.server.TThreadPoolServer$Options {
  public int minWorkerThreads;
  public int maxWorkerThreads;
  public int stopTimeoutVal;
  public java.util.concurrent.TimeUnit stopTimeoutUnit;
  public org.apache.thrift.server.TThreadPoolServer$Options();
}
Compiled from "TThreadPoolServer.java"
class org.apache.thrift.server.TThreadPoolServer$WorkerProcess implements java.lang.Runnable {
  final org.apache.thrift.server.TThreadPoolServer this$0;
  public void run();
  org.apache.thrift.server.TThreadPoolServer$WorkerProcess(org.apache.thrift.server.TThreadPoolServer, org.apache.thrift.transport.TTransport, org.apache.thrift.server.TThreadPoolServer$1);
}
Compiled from "AutoExpandingBuffer.java"
public class org.apache.thrift.transport.AutoExpandingBuffer {
  public org.apache.thrift.transport.AutoExpandingBuffer(int, double);
  public void resizeIfNecessary(int);
  public byte[] array();
}
Compiled from "AutoExpandingBufferReadTransport.java"
public class org.apache.thrift.transport.AutoExpandingBufferReadTransport extends org.apache.thrift.transport.TTransport {
  public org.apache.thrift.transport.AutoExpandingBufferReadTransport(int, double);
  public void fill(org.apache.thrift.transport.TTransport, int) throws org.apache.thrift.transport.TTransportException;
  public void close();
  public boolean isOpen();
  public void open() throws org.apache.thrift.transport.TTransportException;
  public final int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public final void consumeBuffer(int);
  public final byte[] getBuffer();
  public final int getBufferPosition();
  public final int getBytesRemainingInBuffer();
}
Compiled from "AutoExpandingBufferWriteTransport.java"
public final class org.apache.thrift.transport.AutoExpandingBufferWriteTransport extends org.apache.thrift.transport.TTransport {
  public org.apache.thrift.transport.AutoExpandingBufferWriteTransport(int, double);
  public void close();
  public boolean isOpen();
  public void open() throws org.apache.thrift.transport.TTransportException;
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public org.apache.thrift.transport.AutoExpandingBuffer getBuf();
  public int getPos();
  public void reset();
}
Compiled from "TFastFramedTransport.java"
public class org.apache.thrift.transport.TFastFramedTransport extends org.apache.thrift.transport.TTransport {
  public static final int DEFAULT_BUF_CAPACITY;
  public static final int DEFAULT_MAX_LENGTH;
  public org.apache.thrift.transport.TFastFramedTransport(org.apache.thrift.transport.TTransport);
  public org.apache.thrift.transport.TFastFramedTransport(org.apache.thrift.transport.TTransport, int);
  public org.apache.thrift.transport.TFastFramedTransport(org.apache.thrift.transport.TTransport, int, int);
  public void close();
  public boolean isOpen();
  public void open() throws org.apache.thrift.transport.TTransportException;
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void consumeBuffer(int);
  public void flush() throws org.apache.thrift.transport.TTransportException;
  public byte[] getBuffer();
  public int getBufferPosition();
  public int getBytesRemainingInBuffer();
}
Compiled from "TFastFramedTransport.java"
public class org.apache.thrift.transport.TFastFramedTransport$Factory extends org.apache.thrift.transport.TTransportFactory {
  public org.apache.thrift.transport.TFastFramedTransport$Factory();
  public org.apache.thrift.transport.TFastFramedTransport$Factory(int);
  public org.apache.thrift.transport.TFastFramedTransport$Factory(int, int);
  public org.apache.thrift.transport.TTransport getTransport(org.apache.thrift.transport.TTransport);
}
Compiled from "TFramedTransport.java"
public class org.apache.thrift.transport.TFramedTransport extends org.apache.thrift.transport.TTransport {
  protected static final int DEFAULT_MAX_LENGTH;
  public org.apache.thrift.transport.TFramedTransport(org.apache.thrift.transport.TTransport, int);
  public org.apache.thrift.transport.TFramedTransport(org.apache.thrift.transport.TTransport);
  public void open() throws org.apache.thrift.transport.TTransportException;
  public boolean isOpen();
  public void close();
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public byte[] getBuffer();
  public int getBufferPosition();
  public int getBytesRemainingInBuffer();
  public void consumeBuffer(int);
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void flush() throws org.apache.thrift.transport.TTransportException;
  public static final void encodeFrameSize(int, byte[]);
  public static final int decodeFrameSize(byte[]);
}
Compiled from "TFramedTransport.java"
public class org.apache.thrift.transport.TFramedTransport$Factory extends org.apache.thrift.transport.TTransportFactory {
  public org.apache.thrift.transport.TFramedTransport$Factory();
  public org.apache.thrift.transport.TFramedTransport$Factory(int);
  public org.apache.thrift.transport.TTransport getTransport(org.apache.thrift.transport.TTransport);
}
Compiled from "THttpClient.java"
public class org.apache.thrift.transport.THttpClient extends org.apache.thrift.transport.TTransport {
  public org.apache.thrift.transport.THttpClient(java.lang.String) throws org.apache.thrift.transport.TTransportException;
  public void setConnectTimeout(int);
  public void setReadTimeout(int);
  public void setCustomHeaders(java.util.Map<java.lang.String, java.lang.String>);
  public void setCustomHeader(java.lang.String, java.lang.String);
  public void open();
  public void close();
  public boolean isOpen();
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int);
  public void flush() throws org.apache.thrift.transport.TTransportException;
}
Compiled from "TIOStreamTransport.java"
public class org.apache.thrift.transport.TIOStreamTransport extends org.apache.thrift.transport.TTransport {
  protected java.io.InputStream inputStream_;
  protected java.io.OutputStream outputStream_;
  protected org.apache.thrift.transport.TIOStreamTransport();
  public org.apache.thrift.transport.TIOStreamTransport(java.io.InputStream);
  public org.apache.thrift.transport.TIOStreamTransport(java.io.OutputStream);
  public org.apache.thrift.transport.TIOStreamTransport(java.io.InputStream, java.io.OutputStream);
  public boolean isOpen();
  public void open() throws org.apache.thrift.transport.TTransportException;
  public void close();
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void flush() throws org.apache.thrift.transport.TTransportException;
  static {};
}
Compiled from "TMemoryBuffer.java"
public class org.apache.thrift.transport.TMemoryBuffer extends org.apache.thrift.transport.TTransport {
  public org.apache.thrift.transport.TMemoryBuffer(int);
  public boolean isOpen();
  public void open();
  public void close();
  public int read(byte[], int, int);
  public void write(byte[], int, int);
  public java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException;
  public java.lang.String inspect();
  public int length();
  public byte[] getArray();
}
Compiled from "TMemoryInputTransport.java"
public final class org.apache.thrift.transport.TMemoryInputTransport extends org.apache.thrift.transport.TTransport {
  public org.apache.thrift.transport.TMemoryInputTransport();
  public org.apache.thrift.transport.TMemoryInputTransport(byte[]);
  public org.apache.thrift.transport.TMemoryInputTransport(byte[], int, int);
  public void reset(byte[]);
  public void reset(byte[], int, int);
  public void close();
  public boolean isOpen();
  public void open() throws org.apache.thrift.transport.TTransportException;
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public byte[] getBuffer();
  public int getBufferPosition();
  public int getBytesRemainingInBuffer();
  public void consumeBuffer(int);
}
Compiled from "TNonblockingServerSocket.java"
public class org.apache.thrift.transport.TNonblockingServerSocket extends org.apache.thrift.transport.TNonblockingServerTransport {
  public org.apache.thrift.transport.TNonblockingServerSocket(int) throws org.apache.thrift.transport.TTransportException;
  public org.apache.thrift.transport.TNonblockingServerSocket(int, int) throws org.apache.thrift.transport.TTransportException;
  public org.apache.thrift.transport.TNonblockingServerSocket(java.net.InetSocketAddress) throws org.apache.thrift.transport.TTransportException;
  public org.apache.thrift.transport.TNonblockingServerSocket(java.net.InetSocketAddress, int) throws org.apache.thrift.transport.TTransportException;
  public void listen() throws org.apache.thrift.transport.TTransportException;
  protected org.apache.thrift.transport.TNonblockingSocket acceptImpl() throws org.apache.thrift.transport.TTransportException;
  public void registerSelector(java.nio.channels.Selector);
  public void close();
  public void interrupt();
  protected org.apache.thrift.transport.TTransport acceptImpl() throws org.apache.thrift.transport.TTransportException;
}
Compiled from "TNonblockingServerTransport.java"
public abstract class org.apache.thrift.transport.TNonblockingServerTransport extends org.apache.thrift.transport.TServerTransport {
  public org.apache.thrift.transport.TNonblockingServerTransport();
  public abstract void registerSelector(java.nio.channels.Selector);
}
Compiled from "TNonblockingSocket.java"
public class org.apache.thrift.transport.TNonblockingSocket extends org.apache.thrift.transport.TNonblockingTransport {
  public org.apache.thrift.transport.TNonblockingSocket(java.lang.String, int) throws java.io.IOException;
  public org.apache.thrift.transport.TNonblockingSocket(java.lang.String, int, int) throws java.io.IOException;
  public org.apache.thrift.transport.TNonblockingSocket(java.nio.channels.SocketChannel) throws java.io.IOException;
  public java.nio.channels.SelectionKey registerSelector(java.nio.channels.Selector, int) throws java.io.IOException;
  public void setTimeout(int);
  public java.nio.channels.SocketChannel getSocketChannel();
  public boolean isOpen();
  public void open() throws org.apache.thrift.transport.TTransportException;
  public int read(java.nio.ByteBuffer) throws java.io.IOException;
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public int write(java.nio.ByteBuffer) throws java.io.IOException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void flush() throws org.apache.thrift.transport.TTransportException;
  public void close();
  public boolean startConnect() throws java.io.IOException;
  public boolean finishConnect() throws java.io.IOException;
  static {};
}
Compiled from "TNonblockingTransport.java"
public abstract class org.apache.thrift.transport.TNonblockingTransport extends org.apache.thrift.transport.TTransport {
  public org.apache.thrift.transport.TNonblockingTransport();
  public abstract boolean startConnect() throws java.io.IOException;
  public abstract boolean finishConnect() throws java.io.IOException;
  public abstract java.nio.channels.SelectionKey registerSelector(java.nio.channels.Selector, int) throws java.io.IOException;
  public abstract int read(java.nio.ByteBuffer) throws java.io.IOException;
  public abstract int write(java.nio.ByteBuffer) throws java.io.IOException;
}
Compiled from "TSaslClientTransport.java"
public class org.apache.thrift.transport.TSaslClientTransport extends org.apache.thrift.transport.TSaslTransport {
  public org.apache.thrift.transport.TSaslClientTransport(javax.security.sasl.SaslClient, org.apache.thrift.transport.TTransport);
  public org.apache.thrift.transport.TSaslClientTransport(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, javax.security.auth.callback.CallbackHandler, org.apache.thrift.transport.TTransport) throws javax.security.sasl.SaslException;
  protected org.apache.thrift.transport.TSaslTransport$SaslRole getRole();
  protected void handleSaslStartMessage() throws org.apache.thrift.transport.TTransportException, javax.security.sasl.SaslException;
  public void flush() throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public boolean isOpen();
  public void close();
  public javax.security.sasl.SaslServer getSaslServer();
  public javax.security.sasl.SaslClient getSaslClient();
  public void open() throws org.apache.thrift.transport.TTransportException;
  static {};
}
Compiled from "TSaslServerTransport.java"
public class org.apache.thrift.transport.TSaslServerTransport extends org.apache.thrift.transport.TSaslTransport {
  public org.apache.thrift.transport.TSaslServerTransport(org.apache.thrift.transport.TTransport);
  public org.apache.thrift.transport.TSaslServerTransport(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, javax.security.auth.callback.CallbackHandler, org.apache.thrift.transport.TTransport);
  public void addServerDefinition(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, javax.security.auth.callback.CallbackHandler);
  protected org.apache.thrift.transport.TSaslTransport$SaslRole getRole();
  protected void handleSaslStartMessage() throws org.apache.thrift.transport.TTransportException, javax.security.sasl.SaslException;
  public void flush() throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public boolean isOpen();
  public void close();
  public javax.security.sasl.SaslServer getSaslServer();
  public javax.security.sasl.SaslClient getSaslClient();
  public void open() throws org.apache.thrift.transport.TTransportException;
  static org.slf4j.Logger access$000();
  org.apache.thrift.transport.TSaslServerTransport(java.util.Map, org.apache.thrift.transport.TTransport, org.apache.thrift.transport.TSaslServerTransport$1);
  static {};
}
Compiled from "TSaslServerTransport.java"
class org.apache.thrift.transport.TSaslServerTransport$1 {
}
Compiled from "TSaslServerTransport.java"
public class org.apache.thrift.transport.TSaslServerTransport$Factory extends org.apache.thrift.transport.TTransportFactory {
  public org.apache.thrift.transport.TSaslServerTransport$Factory();
  public org.apache.thrift.transport.TSaslServerTransport$Factory(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, javax.security.auth.callback.CallbackHandler);
  public void addServerDefinition(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, javax.security.auth.callback.CallbackHandler);
  public org.apache.thrift.transport.TTransport getTransport(org.apache.thrift.transport.TTransport);
  static {};
}
Compiled from "TSaslServerTransport.java"
class org.apache.thrift.transport.TSaslServerTransport$TSaslServerDefinition {
  public java.lang.String mechanism;
  public java.lang.String protocol;
  public java.lang.String serverName;
  public java.util.Map<java.lang.String, java.lang.String> props;
  public javax.security.auth.callback.CallbackHandler cbh;
  public org.apache.thrift.transport.TSaslServerTransport$TSaslServerDefinition(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, javax.security.auth.callback.CallbackHandler);
}
Compiled from "TSaslTransport.java"
abstract class org.apache.thrift.transport.TSaslTransport extends org.apache.thrift.transport.TTransport {
  protected static final int DEFAULT_MAX_LENGTH;
  protected static final int MECHANISM_NAME_BYTES;
  protected static final int STATUS_BYTES;
  protected static final int PAYLOAD_LENGTH_BYTES;
  protected org.apache.thrift.transport.TTransport underlyingTransport;
  static final boolean $assertionsDisabled;
  protected org.apache.thrift.transport.TSaslTransport(org.apache.thrift.transport.TTransport);
  protected org.apache.thrift.transport.TSaslTransport(javax.security.sasl.SaslClient, org.apache.thrift.transport.TTransport);
  protected void setSaslServer(javax.security.sasl.SaslServer);
  protected void sendSaslMessage(org.apache.thrift.transport.TSaslTransport$NegotiationStatus, byte[]) throws org.apache.thrift.transport.TTransportException;
  protected org.apache.thrift.transport.TSaslTransport$SaslResponse receiveSaslMessage() throws org.apache.thrift.transport.TTransportException;
  protected void sendAndThrowMessage(org.apache.thrift.transport.TSaslTransport$NegotiationStatus, java.lang.String) throws org.apache.thrift.transport.TTransportException;
  protected abstract void handleSaslStartMessage() throws org.apache.thrift.transport.TTransportException, javax.security.sasl.SaslException;
  protected abstract org.apache.thrift.transport.TSaslTransport$SaslRole getRole();
  public void open() throws org.apache.thrift.transport.TTransportException;
  public javax.security.sasl.SaslClient getSaslClient();
  public javax.security.sasl.SaslServer getSaslServer();
  protected int readLength() throws org.apache.thrift.transport.TTransportException;
  protected void writeLength(int) throws org.apache.thrift.transport.TTransportException;
  public void close();
  public boolean isOpen();
  public int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void flush() throws org.apache.thrift.transport.TTransportException;
  static {};
}
Compiled from "TSaslTransport.java"
public final class org.apache.thrift.transport.TSaslTransport$NegotiationStatus extends java.lang.Enum<org.apache.thrift.transport.TSaslTransport$NegotiationStatus> {
  public static final org.apache.thrift.transport.TSaslTransport$NegotiationStatus START;
  public static final org.apache.thrift.transport.TSaslTransport$NegotiationStatus OK;
  public static final org.apache.thrift.transport.TSaslTransport$NegotiationStatus BAD;
  public static final org.apache.thrift.transport.TSaslTransport$NegotiationStatus ERROR;
  public static final org.apache.thrift.transport.TSaslTransport$NegotiationStatus COMPLETE;
  public static org.apache.thrift.transport.TSaslTransport$NegotiationStatus[] values();
  public static org.apache.thrift.transport.TSaslTransport$NegotiationStatus valueOf(java.lang.String);
  public byte getValue();
  public static org.apache.thrift.transport.TSaslTransport$NegotiationStatus byValue(byte);
  static {};
}
Compiled from "TSaslTransport.java"
class org.apache.thrift.transport.TSaslTransport$SaslParticipant {
  public javax.security.sasl.SaslServer saslServer;
  public javax.security.sasl.SaslClient saslClient;
  public org.apache.thrift.transport.TSaslTransport$SaslParticipant(javax.security.sasl.SaslServer);
  public org.apache.thrift.transport.TSaslTransport$SaslParticipant(javax.security.sasl.SaslClient);
  public byte[] evaluateChallengeOrResponse(byte[]) throws javax.security.sasl.SaslException;
  public boolean isComplete();
  public void dispose() throws javax.security.sasl.SaslException;
  public byte[] unwrap(byte[], int, int) throws javax.security.sasl.SaslException;
  public byte[] wrap(byte[], int, int) throws javax.security.sasl.SaslException;
  public java.lang.Object getNegotiatedProperty(java.lang.String);
}
Compiled from "TSaslTransport.java"
public class org.apache.thrift.transport.TSaslTransport$SaslResponse {
  public org.apache.thrift.transport.TSaslTransport$NegotiationStatus status;
  public byte[] payload;
  public org.apache.thrift.transport.TSaslTransport$SaslResponse(org.apache.thrift.transport.TSaslTransport$NegotiationStatus, byte[]);
}
Compiled from "TSaslTransport.java"
public final class org.apache.thrift.transport.TSaslTransport$SaslRole extends java.lang.Enum<org.apache.thrift.transport.TSaslTransport$SaslRole> {
  public static final org.apache.thrift.transport.TSaslTransport$SaslRole SERVER;
  public static final org.apache.thrift.transport.TSaslTransport$SaslRole CLIENT;
  public static org.apache.thrift.transport.TSaslTransport$SaslRole[] values();
  public static org.apache.thrift.transport.TSaslTransport$SaslRole valueOf(java.lang.String);
  static {};
}
Compiled from "TServerSocket.java"
public class org.apache.thrift.transport.TServerSocket extends org.apache.thrift.transport.TServerTransport {
  public org.apache.thrift.transport.TServerSocket(java.net.ServerSocket);
  public org.apache.thrift.transport.TServerSocket(java.net.ServerSocket, int);
  public org.apache.thrift.transport.TServerSocket(int) throws org.apache.thrift.transport.TTransportException;
  public org.apache.thrift.transport.TServerSocket(int, int) throws org.apache.thrift.transport.TTransportException;
  public org.apache.thrift.transport.TServerSocket(java.net.InetSocketAddress) throws org.apache.thrift.transport.TTransportException;
  public org.apache.thrift.transport.TServerSocket(java.net.InetSocketAddress, int) throws org.apache.thrift.transport.TTransportException;
  public void listen() throws org.apache.thrift.transport.TTransportException;
  protected org.apache.thrift.transport.TSocket acceptImpl() throws org.apache.thrift.transport.TTransportException;
  public void close();
  public void interrupt();
  protected org.apache.thrift.transport.TTransport acceptImpl() throws org.apache.thrift.transport.TTransportException;
  static {};
}
Compiled from "TServerTransport.java"
public abstract class org.apache.thrift.transport.TServerTransport {
  public org.apache.thrift.transport.TServerTransport();
  public abstract void listen() throws org.apache.thrift.transport.TTransportException;
  public final org.apache.thrift.transport.TTransport accept() throws org.apache.thrift.transport.TTransportException;
  public abstract void close();
  protected abstract org.apache.thrift.transport.TTransport acceptImpl() throws org.apache.thrift.transport.TTransportException;
  public void interrupt();
}
Compiled from "TSocket.java"
public class org.apache.thrift.transport.TSocket extends org.apache.thrift.transport.TIOStreamTransport {
  public org.apache.thrift.transport.TSocket(java.net.Socket) throws org.apache.thrift.transport.TTransportException;
  public org.apache.thrift.transport.TSocket(java.lang.String, int);
  public org.apache.thrift.transport.TSocket(java.lang.String, int, int);
  public void setTimeout(int);
  public java.net.Socket getSocket();
  public boolean isOpen();
  public void open() throws org.apache.thrift.transport.TTransportException;
  public void close();
  static {};
}
Compiled from "TTransport.java"
public abstract class org.apache.thrift.transport.TTransport {
  public org.apache.thrift.transport.TTransport();
  public abstract boolean isOpen();
  public boolean peek();
  public abstract void open() throws org.apache.thrift.transport.TTransportException;
  public abstract void close();
  public abstract int read(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public int readAll(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void write(byte[]) throws org.apache.thrift.transport.TTransportException;
  public abstract void write(byte[], int, int) throws org.apache.thrift.transport.TTransportException;
  public void flush() throws org.apache.thrift.transport.TTransportException;
  public byte[] getBuffer();
  public int getBufferPosition();
  public int getBytesRemainingInBuffer();
  public void consumeBuffer(int);
}
Compiled from "TTransportException.java"
public class org.apache.thrift.transport.TTransportException extends org.apache.thrift.TException {
  public static final int UNKNOWN;
  public static final int NOT_OPEN;
  public static final int ALREADY_OPEN;
  public static final int TIMED_OUT;
  public static final int END_OF_FILE;
  protected int type_;
  public org.apache.thrift.transport.TTransportException();
  public org.apache.thrift.transport.TTransportException(int);
  public org.apache.thrift.transport.TTransportException(int, java.lang.String);
  public org.apache.thrift.transport.TTransportException(java.lang.String);
  public org.apache.thrift.transport.TTransportException(int, java.lang.Throwable);
  public org.apache.thrift.transport.TTransportException(java.lang.Throwable);
  public org.apache.thrift.transport.TTransportException(java.lang.String, java.lang.Throwable);
  public org.apache.thrift.transport.TTransportException(int, java.lang.String, java.lang.Throwable);
  public int getType();
}
Compiled from "TTransportFactory.java"
public class org.apache.thrift.transport.TTransportFactory {
  public org.apache.thrift.transport.TTransportFactory();
  public org.apache.thrift.transport.TTransport getTransport(org.apache.thrift.transport.TTransport);
}
Compiled from "LogEntry.java"
public class scribe.thrift.LogEntry implements org.apache.thrift.TBase<scribe.thrift.LogEntry, scribe.thrift.LogEntry$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.lang.String category;
  public java.lang.String message;
  public static final java.util.Map<scribe.thrift.LogEntry$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public scribe.thrift.LogEntry();
  public scribe.thrift.LogEntry(java.lang.String, java.lang.String);
  public scribe.thrift.LogEntry(scribe.thrift.LogEntry);
  public scribe.thrift.LogEntry deepCopy();
  public void clear();
  public java.lang.String getCategory();
  public scribe.thrift.LogEntry setCategory(java.lang.String);
  public void unsetCategory();
  public boolean isSetCategory();
  public void setCategoryIsSet(boolean);
  public java.lang.String getMessage();
  public scribe.thrift.LogEntry setMessage(java.lang.String);
  public void unsetMessage();
  public boolean isSetMessage();
  public void setMessageIsSet(boolean);
  public void setFieldValue(scribe.thrift.LogEntry$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(scribe.thrift.LogEntry$_Fields);
  public boolean isSet(scribe.thrift.LogEntry$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(scribe.thrift.LogEntry);
  public int hashCode();
  public int compareTo(scribe.thrift.LogEntry);
  public scribe.thrift.LogEntry$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "LogEntry.java"
class scribe.thrift.LogEntry$1 {
  static final int[] $SwitchMap$scribe$thrift$LogEntry$_Fields;
  static {};
}
Compiled from "LogEntry.java"
public final class scribe.thrift.LogEntry$_Fields extends java.lang.Enum<scribe.thrift.LogEntry$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final scribe.thrift.LogEntry$_Fields CATEGORY;
  public static final scribe.thrift.LogEntry$_Fields MESSAGE;
  public static scribe.thrift.LogEntry$_Fields[] values();
  public static scribe.thrift.LogEntry$_Fields valueOf(java.lang.String);
  public static scribe.thrift.LogEntry$_Fields findByThriftId(int);
  public static scribe.thrift.LogEntry$_Fields findByThriftIdOrThrow(int);
  public static scribe.thrift.LogEntry$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "ResultCode.java"
public final class scribe.thrift.ResultCode extends java.lang.Enum<scribe.thrift.ResultCode> implements org.apache.thrift.TEnum {
  public static final scribe.thrift.ResultCode OK;
  public static final scribe.thrift.ResultCode TRY_LATER;
  public static scribe.thrift.ResultCode[] values();
  public static scribe.thrift.ResultCode valueOf(java.lang.String);
  public int getValue();
  public static scribe.thrift.ResultCode findByValue(int);
  static {};
}
Compiled from "scribe.java"
public class scribe.thrift.scribe {
  public scribe.thrift.scribe();
}
Compiled from "scribe.java"
class scribe.thrift.scribe$1 {
  static final int[] $SwitchMap$scribe$thrift$scribe$Log_args$_Fields;
  static final int[] $SwitchMap$scribe$thrift$scribe$Log_result$_Fields;
  static {};
}
Compiled from "scribe.java"
public class scribe.thrift.scribe$AsyncClient extends com.facebook.fb303.FacebookService$AsyncClient implements scribe.thrift.scribe$AsyncIface {
  public scribe.thrift.scribe$AsyncClient(org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.async.TAsyncClientManager, org.apache.thrift.transport.TNonblockingTransport);
  public void Log(java.util.List<scribe.thrift.LogEntry>, org.apache.thrift.async.AsyncMethodCallback<scribe.thrift.scribe$AsyncClient$Log_call>) throws org.apache.thrift.TException;
}
Compiled from "scribe.java"
public class scribe.thrift.scribe$AsyncClient$Factory implements org.apache.thrift.async.TAsyncClientFactory<scribe.thrift.scribe$AsyncClient> {
  public scribe.thrift.scribe$AsyncClient$Factory(org.apache.thrift.async.TAsyncClientManager, org.apache.thrift.protocol.TProtocolFactory);
  public scribe.thrift.scribe$AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport);
  public org.apache.thrift.async.TAsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport);
}
Compiled from "scribe.java"
public class scribe.thrift.scribe$AsyncClient$Log_call extends org.apache.thrift.async.TAsyncMethodCall {
  public scribe.thrift.scribe$AsyncClient$Log_call(java.util.List<scribe.thrift.LogEntry>, org.apache.thrift.async.AsyncMethodCallback<scribe.thrift.scribe$AsyncClient$Log_call>, org.apache.thrift.async.TAsyncClient, org.apache.thrift.protocol.TProtocolFactory, org.apache.thrift.transport.TNonblockingTransport) throws org.apache.thrift.TException;
  public void write_args(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public scribe.thrift.ResultCode getResult() throws org.apache.thrift.TException;
}
Compiled from "scribe.java"
public interface scribe.thrift.scribe$AsyncIface extends com.facebook.fb303.FacebookService$AsyncIface {
  public abstract void Log(java.util.List<scribe.thrift.LogEntry>, org.apache.thrift.async.AsyncMethodCallback<scribe.thrift.scribe$AsyncClient$Log_call>) throws org.apache.thrift.TException;
}
Compiled from "scribe.java"
public class scribe.thrift.scribe$Client extends com.facebook.fb303.FacebookService$Client implements org.apache.thrift.TServiceClient,scribe.thrift.scribe$Iface {
  public scribe.thrift.scribe$Client(org.apache.thrift.protocol.TProtocol);
  public scribe.thrift.scribe$Client(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol);
  public scribe.thrift.ResultCode Log(java.util.List<scribe.thrift.LogEntry>) throws org.apache.thrift.TException;
  public void send_Log(java.util.List<scribe.thrift.LogEntry>) throws org.apache.thrift.TException;
  public scribe.thrift.ResultCode recv_Log() throws org.apache.thrift.TException;
}
Compiled from "scribe.java"
public class scribe.thrift.scribe$Client$Factory implements org.apache.thrift.TServiceClientFactory<scribe.thrift.scribe$Client> {
  public scribe.thrift.scribe$Client$Factory();
  public scribe.thrift.scribe$Client getClient(org.apache.thrift.protocol.TProtocol);
  public scribe.thrift.scribe$Client getClient(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol);
  public org.apache.thrift.TServiceClient getClient(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol);
  public org.apache.thrift.TServiceClient getClient(org.apache.thrift.protocol.TProtocol);
}
Compiled from "scribe.java"
public interface scribe.thrift.scribe$Iface extends com.facebook.fb303.FacebookService$Iface {
  public abstract scribe.thrift.ResultCode Log(java.util.List<scribe.thrift.LogEntry>) throws org.apache.thrift.TException;
}
Compiled from "scribe.java"
public class scribe.thrift.scribe$Log_args implements org.apache.thrift.TBase<scribe.thrift.scribe$Log_args, scribe.thrift.scribe$Log_args$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public java.util.List<scribe.thrift.LogEntry> messages;
  public static final java.util.Map<scribe.thrift.scribe$Log_args$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public scribe.thrift.scribe$Log_args();
  public scribe.thrift.scribe$Log_args(java.util.List<scribe.thrift.LogEntry>);
  public scribe.thrift.scribe$Log_args(scribe.thrift.scribe$Log_args);
  public scribe.thrift.scribe$Log_args deepCopy();
  public void clear();
  public int getMessagesSize();
  public java.util.Iterator<scribe.thrift.LogEntry> getMessagesIterator();
  public void addToMessages(scribe.thrift.LogEntry);
  public java.util.List<scribe.thrift.LogEntry> getMessages();
  public scribe.thrift.scribe$Log_args setMessages(java.util.List<scribe.thrift.LogEntry>);
  public void unsetMessages();
  public boolean isSetMessages();
  public void setMessagesIsSet(boolean);
  public void setFieldValue(scribe.thrift.scribe$Log_args$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(scribe.thrift.scribe$Log_args$_Fields);
  public boolean isSet(scribe.thrift.scribe$Log_args$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(scribe.thrift.scribe$Log_args);
  public int hashCode();
  public int compareTo(scribe.thrift.scribe$Log_args);
  public scribe.thrift.scribe$Log_args$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "scribe.java"
public final class scribe.thrift.scribe$Log_args$_Fields extends java.lang.Enum<scribe.thrift.scribe$Log_args$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final scribe.thrift.scribe$Log_args$_Fields MESSAGES;
  public static scribe.thrift.scribe$Log_args$_Fields[] values();
  public static scribe.thrift.scribe$Log_args$_Fields valueOf(java.lang.String);
  public static scribe.thrift.scribe$Log_args$_Fields findByThriftId(int);
  public static scribe.thrift.scribe$Log_args$_Fields findByThriftIdOrThrow(int);
  public static scribe.thrift.scribe$Log_args$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "scribe.java"
public class scribe.thrift.scribe$Log_result implements org.apache.thrift.TBase<scribe.thrift.scribe$Log_result, scribe.thrift.scribe$Log_result$_Fields>, java.io.Serializable, java.lang.Cloneable {
  public scribe.thrift.ResultCode success;
  public static final java.util.Map<scribe.thrift.scribe$Log_result$_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  public scribe.thrift.scribe$Log_result();
  public scribe.thrift.scribe$Log_result(scribe.thrift.ResultCode);
  public scribe.thrift.scribe$Log_result(scribe.thrift.scribe$Log_result);
  public scribe.thrift.scribe$Log_result deepCopy();
  public void clear();
  public scribe.thrift.ResultCode getSuccess();
  public scribe.thrift.scribe$Log_result setSuccess(scribe.thrift.ResultCode);
  public void unsetSuccess();
  public boolean isSetSuccess();
  public void setSuccessIsSet(boolean);
  public void setFieldValue(scribe.thrift.scribe$Log_result$_Fields, java.lang.Object);
  public java.lang.Object getFieldValue(scribe.thrift.scribe$Log_result$_Fields);
  public boolean isSet(scribe.thrift.scribe$Log_result$_Fields);
  public boolean equals(java.lang.Object);
  public boolean equals(scribe.thrift.scribe$Log_result);
  public int hashCode();
  public int compareTo(scribe.thrift.scribe$Log_result);
  public scribe.thrift.scribe$Log_result$_Fields fieldForId(int);
  public void read(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public void write(org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  public java.lang.String toString();
  public void validate() throws org.apache.thrift.TException;
  public org.apache.thrift.TBase deepCopy();
  public void setFieldValue(org.apache.thrift.TFieldIdEnum, java.lang.Object);
  public java.lang.Object getFieldValue(org.apache.thrift.TFieldIdEnum);
  public boolean isSet(org.apache.thrift.TFieldIdEnum);
  public org.apache.thrift.TFieldIdEnum fieldForId(int);
  public int compareTo(java.lang.Object);
  static {};
}
Compiled from "scribe.java"
public final class scribe.thrift.scribe$Log_result$_Fields extends java.lang.Enum<scribe.thrift.scribe$Log_result$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final scribe.thrift.scribe$Log_result$_Fields SUCCESS;
  public static scribe.thrift.scribe$Log_result$_Fields[] values();
  public static scribe.thrift.scribe$Log_result$_Fields valueOf(java.lang.String);
  public static scribe.thrift.scribe$Log_result$_Fields findByThriftId(int);
  public static scribe.thrift.scribe$Log_result$_Fields findByThriftIdOrThrow(int);
  public static scribe.thrift.scribe$Log_result$_Fields findByName(java.lang.String);
  public short getThriftFieldId();
  public java.lang.String getFieldName();
  static {};
}
Compiled from "scribe.java"
public class scribe.thrift.scribe$Processor extends com.facebook.fb303.FacebookService$Processor implements org.apache.thrift.TProcessor {
  public scribe.thrift.scribe$Processor(scribe.thrift.scribe$Iface);
  public boolean process(org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  static scribe.thrift.scribe$Iface access$100(scribe.thrift.scribe$Processor);
  static {};
}
Compiled from "scribe.java"
class scribe.thrift.scribe$Processor$Log implements com.facebook.fb303.FacebookService$Processor$ProcessFunction {
  final scribe.thrift.scribe$Processor this$0;
  public void process(int, org.apache.thrift.protocol.TProtocol, org.apache.thrift.protocol.TProtocol) throws org.apache.thrift.TException;
  scribe.thrift.scribe$Processor$Log(scribe.thrift.scribe$Processor, scribe.thrift.scribe$1);
}
